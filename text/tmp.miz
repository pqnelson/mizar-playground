:: Characteristic Subgroups.
::  by Alex Nelson
::
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies TMP, MOD_4, CARD_3, RLVECT_1, UPROOTS,
   RELAT_1, TARSKI, FUNCT_1, ZFMISC_1, XXREAL_0, XXREAL_1, FINSEQ_1,
   FINSET_1, NUMBERS, WELLORD1, SUBSET_1, XBOOLE_0, PARTFUN1,
   FUNCT_2, CARD_1, ARYTM_3, CQC_SIM1, ORDINAL1, PBOOLE,
   STRUCT_0, GROUP_1, GROUP_2, GROUP_3, GROUP_4, GROUP_5,
   GROUP_6, GROUP_7, BINOP_1, BINOP_2, ALGSTR_0, REALSET1, AUTGROUP, GR_CY_1, NATTRA_1,
   NAT_1, INT_2, SETFAM_1, NEWTON, PRE_TOPC, GROUP_10;
 constructors TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, RELAT_1, FUNCT_1,
   RELSET_1, PARTFUN1, FUNCT_2, FUNCOP_1, FINSEQ_1, FINSEQ_2, FINSOP_1,
   CARD_1, CARD_3, NUMBERS, REAL_1, SETWISEO,
   ARYTM_2, ARYTM_3, ORDINAL2, SQUARE_1,
   SETFAM_1, ORDINAL1,INT_1, INT_2, PBOOLE,
   XXREAL_2, XCMPLX_0, XXREAL_0, XREAL_0,  NAT_1, NAT_D,
   BINOP_1, BINOP_2, FINSET_1, STRUCT_0, ALGSTR_0, REALSET1, MONOID_0,
   GROUP_1, GROUP_2, GROUP_3, GROUP_4, GROUP_5, GROUP_6, PRALG_1, GROUP_7, GRSOLV_1,
   AUTGROUP, GROUP_9, GROUP_10, GR_CY_1, NEWTON;
 notations TARSKI, XBOOLE_0, SUBSET_1, XCMPLX_0, ORDINAL1, RELAT_1,
   FUNCT_1, RELSET_1, FUNCT_2, FUNCOP_1, SETWISEO, PARTFUN1,
   ZFMISC_1, CARD_1, CARD_3, INT_1, NAT_1, INT_2, ARYTM_2, ARYTM_3,
   FINSEQ_2, REAL_1, SETFAM_1, NUMBERS, MEMBERED, PBOOLE, BINOP_1,
   BINOP_2, FINSET_1, STRUCT_0, ALGSTR_0, XXREAL_0, FINSEQ_1, GROUP_1, GROUP_2,
   GROUP_3, GROUP_4, GROUP_5, REALSET1, GROUP_6, NAT_D, GRSOLV_1,
   AUTGROUP, GROUP_9, GROUP_10, GR_CY_1, NEWTON, PRALG_1, GROUP_7;
 registrations XBOOLE_0, RELAT_1, FUNCT_1, PARTFUN1, RELSET_1, FUNCT_2,
   ORDINAL1, FINSET_1, FINSEQ_1, NUMBERS, NAT_1, INT_1, INT_2, XCMPLX_0,
   ARYTM_3, XREAL_0, ARYTM_2, SETWISEO, CARD_1, NEWTON, FINSEQ_2,
   STRUCT_0, BINOP_1, GROUP_1, GROUP_2, GROUP_3, GROUP_6, GR_CY_1, GROUP_7;
 requirements BOOLE, SUBSET, NUMERALS, ARITHM, REAL;
 definitions TARSKI, SUBSET_1, FUNCT_1, FUNCT_2, ARYTM_2, FINSEQ_1, PRALG_1,
   GROUP_1, GROUP_3, GROUP_4, GROUP_5, GROUP_6, AUTGROUP, NEWTON, XXREAL_0, GROUP_7;
 equalities PARTFUN1, FINSET_1, BINOP_1, REALSET1, STRUCT_0, GROUP_2,
   GROUP_3, GROUP_4, GROUP_5, GROUP_6, GR_CY_1,
   ALGSTR_0, NEWTON, PRALG_1, GROUP_7;
 expansions TARSKI, FINSET_1, GROUP_1, GROUP_2, GROUP_6, STRUCT_0, BINOP_1,
   FUNCT_2, NEWTON, PRALG_1, GROUP_7;
 theorems
   TARSKI, SUBSET_1, RELSET_1, FUNCT_1, FUNCT_2, XBOOLE_0, CARD_1, RELAT_1,
   SETFAM_1, FINSEQ_3, PARTFUN1, ORDINAL1, CARD_3, PRALG_1, FINSEQ_1, FINSET_1,
   GROUP_1, GROUP_2, GROUP_3, GROUP_4, GROUP_5, GROUP_6, STRUCT_0, GRSOLV_1,
   AUTGROUP, GROUP_9, GROUP_10, GR_CY_1, XCMPLX_1, GROUP_7, XTUPLE_0;
 schemes FUNCT_1, FUNCT_2, GROUP_4, FINSEQ_1, FRAENKEL, XFAMILY, XBOOLE_0;

begin

theorem Th57:
  for Fam being set
  st Fam <> {} & (for G being Element of Fam holds G is Group)
  holds ex F being associative Group-like multMagma-Family of Fam
  st (for G being Group st G in Fam holds F.G=G)
proof
  let Fam be set;
  assume A1: Fam <> {};
  assume A2: for G being Element of Fam holds G is Group;
  set F = id Fam;
  A3: F = id Fam;
  dom F = Fam;
  then F is total Fam-defined Function;
  then F is ManySortedSet of Fam;
  A3: for y being set st y in rng F holds y is non empty multMagma
  proof
    let y be set;
    assume B1: y in rng F;
    then y is Element of Fam;
    then y is Group by A2;
    hence thesis;
  end;
  then F is multMagma-yielding ManySortedSet of Fam by GROUP_7:def 1;
  then reconsider F as multMagma-Family of Fam;
  F is associative Group-like multMagma-Family of Fam
  proof
    for i being set st i in Fam ex Fi being Group-like non empty
    multMagma st Fi = F.i
    proof
      let i be set;
      assume i in Fam;
      then reconsider i as Element of Fam;
      i is Group by A2;
      then consider Fi being Group such that
      D1: Fi = i
      by A2;
      F.i=Fi by D1,FUNCT_1:17;
      hence thesis;
    end;
    then B1: F is Group-like by GROUP_7:def 3;
    for i being set st i in Fam ex Fi being associative non empty
    multMagma st Fi = F.i
    proof
      let i be set;
      assume i in Fam;
      then reconsider i as Element of Fam;
      i is Group by A2;
      then consider Fi being Group such that
      D1: Fi = i
      by A2;
      F.i=Fi by D1,FUNCT_1:17;
      hence thesis;
    end;
    then B2: F is associative by GROUP_7:def 4;
    thus thesis by B1,B2;
  end;
  then reconsider F as associative Group-like multMagma-Family of Fam;
  take F;
  let G be Group;
  assume A3: G in Fam;
  thus F.G=G by A3,FUNCT_1:17;
end;

theorem Th58:
  for Fam being finite set
  st Fam <> {} & (for G being Element of Fam holds G is Group)
  holds ex F being associative Group-like multMagma-Family of Seg (card Fam)
  st F is one-to-one & (for i being Nat st i in Seg (card Fam) holds ex G
  being Group st G in Fam & F.i=G)
proof
  let Fam be finite set;
  assume A1: Fam <> {};
  assume A2: for G being Element of Fam holds G is Group;
  set F = canFS Fam;
  set n = len F;
  A21: n = len F;
  A3: len F = card Fam by FINSEQ_1:93;
  A31: n = card Fam by A21,A3;
  F is PartFunc of NAT,Fam;
  A4: F is one-to-one onto by FINSEQ_1:def 19;
  F is Function of Seg n,Fam
  proof
    B1: dom F = Seg n by A1,FINSEQ_1:def 2,def 3;
    then reconsider F1 = F|(dom F) as PartFunc of Seg n,Fam by PARTFUN1:10;
    set F = F1;
    F is PartFunc of Seg n,Fam &
    dom F = Seg n by B1;
    then F is quasi_total by A1,FUNCT_2:def 1;
    hence thesis;
  end;
  then reconsider F as Function of Seg n,Fam by A4;
  A40: rng F = Fam by A4;
  A5: F is ManySortedSet of (Seg n)
  proof
    B1: dom F = Seg (card Fam) by A3,FINSEQ_1:def 3;
    then B2: F is (Seg n)-defined Function by RELAT_1:def 16;
    F is quasi_total Function of Seg n,Fam;
    then dom F = (Seg n) by B1,A3;
    then F is total by B1,PARTFUN1:def 2;
    hence thesis;
  end;
  A6: for y being set st y in rng F holds y is non empty multMagma
  proof
    let y be set;
    assume B1: y in rng F;
    then y is Element of Fam;
    then y is Group by A2;
    hence thesis;
  end;
  then F is multMagma-yielding by GROUP_7:def 1;
  then F is multMagma-yielding ManySortedSet of Seg n by A5,A6,GROUP_7:def 1;
  then reconsider F as multMagma-Family of Seg n;
  F is associative Group-like multMagma-Family of Seg n
  proof
    for i being set st i in Seg n ex Fi being Group-like non empty
    multMagma st Fi = F.i
    proof
      let i be set;
      assume D1: i in Seg n;
      then reconsider i as Element of Seg n;
      dom F = Seg n by A3,FINSEQ_1:def 3;
      then i in dom F by D1;
      then F.i in rng F by FUNCT_1:3;
      then F.i in Fam by A40;
      then F.i is Element of Fam;
      then F.i is Group by A2;
      then consider Fi being Group such that
      D2: Fi = F.i
      by A2;
      F.i=Fi by D2,FUNCT_1:17;
      hence thesis;
    end;
    then B1: F is Group-like by GROUP_7:def 3;
    for i being set st i in Seg n ex Fi being associative non empty
    multMagma st Fi = F.i
    proof
      let i be set;
      assume D1: i in Seg n;
      then reconsider i as Element of Seg n;
      dom F = Seg n by A3,FINSEQ_1:def 3;
      then i in dom F by D1;
      then F.i in rng F by FUNCT_1:3;
      then F.i in Fam by A40;
      then F.i is Element of Fam;
      then F.i is Group by A2;
      then consider Fi being Group such that
      D2: Fi = F.i
      by A2;
      F.i=Fi by D2,FUNCT_1:17;
      hence thesis;
    end;
    then B2: F is associative by GROUP_7:def 4;
    thus thesis by B1,B2;
  end;
  then reconsider F as associative Group-like multMagma-Family of Seg
  (card Fam) by A31;
  take F;
  thus F is one-to-one by A4;
  let i be Nat;
  assume A10: i in Seg (card Fam);
  dom F = Seg n by A3,FINSEQ_1:def 3;
  then i in dom F by A31,A10;
  then F.i in rng F by FUNCT_1:3;
  then A11: F.i in Fam by A40;
  then F.i is Element of Fam;
  then A12: F.i is Group by A2;
  hence thesis by A11;
end;

theorem Th59:
  for G being finite Group
  for X being Subset of Subgroups G
  holds X is finite
proof
  let G be finite Group;
  let X be Subset of Subgroups G;
  X c= Subgroups G & Subgroups G is finite by GROUP_3:15;
  hence X is finite by FINSET_1:1;
end;



theorem Th60:
  for G being Group
  for Fam being set
  st Fam<>{} & (for A being Element of Fam holds ex N being normal
  Subgroup of G st A = the carrier of N)
  for I being set
  st card I = card Fam
  holds ex F being associative Group-like multMagma-Family of I st
  (for i being Element of I
   holds ex N being normal Subgroup of G
         st the carrier of N in Fam & F.i = G./.N) &
  (for N being normal Subgroup of G st the carrier of N in Fam
  holds ex i being Element of I st F.i=G./.N);
::>                                         *4
:: proof
::   let G be Group;
::   let Fam be set;
::   assume A1: Fam<>{};
::   assume A2: for A being Element of Fam
::              holds ex N being normal Subgroup of G st A = the carrier of N;
::   let I be set;
::   assume A3: card I = card Fam;
::   consider F being associative Group-like multMagma-Family of I;
:: ::>                                                            *403
::   take F;
::   thus (for i being Element of I
::         holds ex N being normal Subgroup of G
::               st the carrier of N in Fam & F.i = G./.N)
::   proof
::     let i be Element of I;
::     consider N being normal Subgroup of G;
:: ::>                                      *403
::     take N;
::     thus the carrier of N in Fam;
:: ::>                            *4
::     thus F.i = G./.N;
:: ::>                *4
::   end;
::   let N be normal Subgroup of G;
::   assume Z3: the carrier of N in Fam;
::   consider i being Element of I;
:: ::>                            *403
::   take i;
::   thus F.i=G./.N;
:: ::>            *4
:: end;

theorem Th61:
  for G being Group
  ex X being set
  st (for N being normal Subgroup of G
      holds G./.N in X);
::>                   *4


theorem Th56:
  for G being Group
  for X being set
  st X<>{} & (for A being object st A in X holds A is normal Subgroup of G)
  for I being set
  st card I = card X
  holds ex F being associative Group-like multMagma-Family of I st
  (for i being Element of I
   holds ex N being normal Subgroup of G st N in X & F.i = G./.N) &
  (for N being normal Subgroup of G st N in X
   holds ex i being Element of I st F.i = G./.N);
::>                                            *4


definition
  let G be Group;
  func normal_Subgroups G -> set means
  :Def10:
  for x being object holds x in it iff x is strict normal Subgroup of G;
  existence
  proof
    take IT = {N where N is Element of Subgroups G : N is strict normal Subgroup of G};
    A1: for N being object st N is strict normal Subgroup of G holds N in IT
    proof
      let N be object;
      assume B1: N is strict normal Subgroup of G;
      then B2: N in Subgroups G by GROUP_3:def 1;
      thus N in IT by B1, B2;
    end;
    A2: for N being object st N in IT holds N is strict normal Subgroup of G
    proof
      let N be object;
      assume B1: N in IT;
      then consider N0 being Element of Subgroups G such that
      B2: N0 = N and
      B3: N0 is strict normal Subgroup of G;
      thus N is strict normal Subgroup of G by B1,B2,B3;
    end;

    thus thesis by A1,A2;
  end;
  uniqueness
  proof
    defpred P[object] means $1 is strict normal Subgroup of G;
    let A1,A2 be set;
    assume
A10: for x being object holds x in A1 iff P[x];
    assume
A11: for x being object holds x in A2 iff P[x];
    thus thesis from XBOOLE_0:sch 2(A10,A11);
  end;
end;

theorem Th62:
  for G being Group
  for Fam being non empty set
  st (for N being Element of Fam holds N is normal Subgroup of G)
  holds ex F being associative Group-like multMagma-Family of Fam
  st (for N being normal Subgroup of G st N in Fam holds F.N=G./.N)
proof
  let G be Group;
  let Fam be non empty set;
  defpred P[object,object] means ex N being normal Subgroup of G st $1=N & $2=G./.N;
  assume A1: for N being Element of Fam holds N is normal Subgroup of G;
  A2: for x,y1,y2 being object st x in Fam & P[x,y1] & P[x,y2] holds y1=y2;
  A3: for x being object st x in Fam ex y being object st P[x,y]
  proof
    let x be object;
    assume B1: x in Fam;
    then x is normal Subgroup of G by A1;
    then reconsider x as normal Subgroup of G;
    consider N being normal Subgroup of G such that
    B2: x = N by Def10;
    consider y being Group such that
    B3: y = G./.N;
    reconsider y as object;
    take y;
    B5: P[x,y] by B2,B3;
    hence thesis;
  end;

  consider F being Function such that
  A4: dom F = Fam and
  A5: for x being object st x in Fam holds P[x, F.x]
  from FUNCT_1:sch 2(A2,A3);

  A6: for x being normal Subgroup of G st x in Fam holds F.x = G./.x
  proof
    let x be normal Subgroup of G;
    assume B1: x in Fam;
    P[x, F.x] by A4,A5,B1;
    then consider N being normal Subgroup of G such that
    B2: x = N and
    B3: F.x = G./.N;
    thus F.x = G./.x by B2,B3;
  end;  
  set codomain = rng F;
  A7: codomain <> {}
  proof
    Fam is non empty;
    then consider x being object such that
    B1: x in Fam
    by XBOOLE_0:def 1;
    reconsider x as Element of Fam by B1;
    F.x in rng F by A4,FUNCT_1:3;
    then F.x in codomain;
    hence thesis by XBOOLE_0:def 1;
  end;
  A8: for y being Element of codomain holds y is Group
  proof
    let y be Element of codomain;
    y in codomain by A7;
    then y in rng F;
    then consider x being object such that
    B1: x in dom F and
    B2: y = F.x
    by FUNCT_1:def 3;
    P[x, y] by B1,B2,A4,A5;
    then consider N being normal Subgroup of G such that
    B3: x = N and
    B4: y = G./.N;
    thus y is Group by B4;
  end;

  
  reconsider F as Function of Fam,codomain by A4,FUNCT_2:1;
  A9: F is Function of Fam,codomain by FUNCT_2:1;
  F is total Fam-defined Function by A4,A6,A7,FUNCT_2:def 1;
  then A10: F is ManySortedSet of Fam;

  A11: for y being set st y in rng F holds y is non empty multMagma
  proof
    let y be set;
    assume B1: y in rng F;
    then consider x being object such that
    B2: x in dom F and
    B3: y = F.x
    by FUNCT_1:def 3;
    x is Element of dom F by B2;
    then x is normal Subgroup of G by B2,A1;
    then reconsider x as normal Subgroup of G;
    y in rng F by A4, B2, B3, FUNCT_1:3;
    then y is Element of codomain;
    then y is Group by A8;
    hence thesis;
  end;
  then F is multMagma-yielding ManySortedSet of Fam by A10,GROUP_7:def 1;
  then reconsider F as multMagma-Family of Fam;
  F is associative Group-like multMagma-Family of Fam
  proof
    for i being set st i in Fam ex Fi being Group-like non empty
    multMagma st Fi = F.i
    proof
      let i be set;
      assume D1: i in Fam;
      then reconsider i as normal Subgroup of G by A1;
      consider Fi being Group such that
      D2: Fi = G./.i
      by A6;
      F.i = G./.i by D1,A6
      .= Fi by D2;
      hence thesis;
    end;
    then B1: F is Group-like by GROUP_7:def 3;
    for i being set st i in Fam ex Fi being associative non empty
    multMagma st Fi = F.i
    proof
      let i be set;
      assume D1: i in Fam;
      then reconsider i as normal Subgroup of G by A1;
      consider Fi being Group such that
      D2: Fi = G./.i
      by A6;
      F.i = G./.i by D1,A6
      .= Fi by D2;
      hence thesis;
    end;
    then B2: F is associative by GROUP_7:def 4;
    thus thesis by B1,B2;
  end;
  then reconsider F as associative Group-like multMagma-Family of Fam;

  take F;
  let N be normal Subgroup of G;
  assume A8: N in Fam;
  hence F.N=G./.N by A6;
end;



for G being Group
for Fam being Subset of Subgroups G
st Fam <> {} & (for H1,H2 being strict Subgroup of G st H1 in Fam & H2
in Fam holds H1 /\ H2 in Fam)
holds ex H being strict Subgroup of G st H in Fam & (for K being strict
Subgroup of G st K in Fam holds H is Subgroup of K)
proof
  let G be Group;
  let Fam be Subset of Subgroups G;
  assume A1: Fam <> {};
  assume A2: for H1,H2 being strict Subgroup of G st H1 in Fam & H2 in Fam holds H1 /\ H2 in Fam;
  consider H being strict Subgroup of G such that
  A3: for K being strict Subgroup of G st K in Fam holds H is Subgroup of K;
::>                                                                       *4
  take H;
  thus H in Fam;
  
::>           *4
  let K be strict Subgroup of G;
  assume K in Fam;
  hence H is Subgroup of K by A3;
end;



for G being Group
for Fam being Subset of normal_Subgroups G
st Fam <> {} & (for N1, N2, H being normal Subgroup of G st N1 in Fam &
N2 in Fam & G./.H is Subgroup of product <*G./.N1,G./.N2*> holds H
in Fam) &
(for N, H being normal Subgroup of G st N in Fam &
G./.H,G./.N are_isomorphic holds H in Fam)
holds (ex K being normal Subgroup of G st the carrier of K = meet {A
where A is Subset of G : ex N being normal Subgroup of G st N in Fam & A = the carrier of N}
& K in Fam)
proof
  let G be Group;
  let Fam be Subset of normal_Subgroups G;
  assume A1: Fam <> {};
  assume A2: for N1, N2, H being normal Subgroup of G st N1 in Fam & N2 in Fam & G./.H is Subgroup of product <*G./.N1,G./.N2*> holds H in Fam;
  assume A3: for N, H being normal Subgroup of G st N in Fam & G./.H,G./.N are_isomorphic holds H in Fam;
  consider K being normal Subgroup of G such that
  A4: the carrier of K = meet {A where A is Subset of G : ex N being normal Subgroup of G st N in Fam & A = the carrier of N};
::>                                                                                                                         *4
  take K;
  thus the carrier of K = meet {A where A is Subset of G : ex N being
  normal Subgroup of G st N in Fam & A = the carrier of N} by A4;

  A5: for N1,N2 being strict normal Subgroup of G st N1 in Fam & N2 in Fam
  holds N1 /\ N2 in Fam
  proof
    let N1,N2 be strict normal Subgroup of G;
    assume B1: N1 in Fam & N2 in Fam;
    set N = N1 /\ N2;
    reconsider N as normal Subgroup of G by GROUP_3:115;
    consider H being normal Subgroup of G such that
    B2: G./.H is Subgroup of product <*G./.N1,G./.N2*> and
    B3: G./.H,G./.N are_isomorphic;
::>                              *4
    H in Fam by B1,B2,A2;
    then N in Fam by A3,B3;
    hence N1 /\ N2 in Fam;
  end;
  thus K in Fam;
::>           *4
end;

::> 4: This inference is not accepted
