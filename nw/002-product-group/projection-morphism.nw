% -*- mode: poly-noweb; noweb-code-mode: mizar-mode; -*-

\section{Definition and Results about Projection Morphism}

The projection morphism is defined on the product group
$\pi_{i}\colon\prod\mathcal{F}\to\mathcal{F}_{i}$ for any $i\in I$.

<<Definition and Results about Projection Morphism>>=
begin :: Projection Morphisms from Product Group to Direct Factors
<<Theorem: if $g\in\prod\mathcal{F}$, then $g_{i}\in\mathcal{F}_{i}$>>

<<Definition: when $g\in\prod\mathcal{F}$, treat $g_{i}$ as Element of $\mathcal{F}_{i}$>>

<<Register: identify [[g/.i]] with [[g.i]] automatically>>

<<Definition: projection morphism>>

<<Theorem: the projection morphism is surjective>>

<<Register: projection morphism is surjective>>

<<Theorem: underlying set theoretic aspects of projection>>

<<Theorem: projection acts on product group by means of its underlying function>>

<<Theorem: $\pi_{i} = U(\pi_{i})$>>

<<Theorem: if $g\in\prod\mathcal{F}$ and $h\in\mathcal{F}_{i}$, then [[g +* (i, h)]]$\in\prod\mathcal{F}$>>

<<Theorem: elements of kernel of projection>>

<<Theorem: inclusion by any other name>>

<<Theorem: [[proj]] is left-inverse for [[1ProdHom]]>>

<<Theorem: projecting image of [[1ProdHom]] onto different component is trivial>>
@

\begin{theorem}
Let $\mathcal{F}$ be a family of groups.
If $g\in\prod\mathcal{F}$, then $g_{i}$ is an element of $\mathcal{F}_{i}$.
\end{theorem}

<<Theorem: if $g\in\prod\mathcal{F}$, then $g_{i}\in\mathcal{F}_{i}$>>=
theorem Th35:
  for g being Element of product F
  holds g.i is Element of F.i
proof
  let g be Element of product F;
  g is Function & g in product F;
  then g.i in F.i by GROUP_19:5;
  hence thesis;
end;
@ %def Th35

\begin{definition}
We redefine the function application for elements of the product group,
so if $g\in\prod\mathcal{F}$, then we treat $g_{i}$ as an Element of $\mathcal{F}_{i}$.
\end{definition}

<<Definition: when $g\in\prod\mathcal{F}$, treat $g_{i}$ as Element of $\mathcal{F}_{i}$>>=
definition
  let I be non empty set;
  let F be Group-Family of I;
  let g be Element of product F;
  let i be Element of I;
  func g/.i -> Element of F.i equals :Def15: g.i;
  correctness by Th35;
end;
@ %def Def15

\begin{registration}
We identify [[g/.i]] with [[g.i]] automatically, without appealing to
the definition explicitly.
\end{registration}

<<Register: identify [[g/.i]] with [[g.i]] automatically>>=
registration
  let I be non empty set;
  let F be Group-Family of I;
  let g be Element of product F;
  let i be Element of I;
  identify g/.i with g.i;
  correctness;
end;
@ 

\begin{definition}
Let $\mathcal{F}$ be a family of groups indexed by $I\neq\emptyset$.
We define the \define{Projection Morphism} $\pi_{i}\colon\prod\mathcal{F}\to\mathcal{F}_{i}$
by $\pi_{i}(g)=g_{i}$ for any $g\in\prod\mathcal{F}$.
\end{definition}

\begin{def-remark}
We will follow the notation found in~\mml[def 16]{card3} and \mml[def 2]{pralg3}
writing $\pi_{i}$ in Mizar as ``\lstinline{proj (F, i)}''. It is ideal
to be consistent in our choice of notation with pre-existing notation.
\end{def-remark}

<<Definition: projection morphism>>=
definition
  let I be non empty set;
  let i be Element of I;
  let F be Group-Family of I;
  func proj (F, i) -> Homomorphism of (product F), F.i means
  :Def16:
  for h being Element of product F holds it.h = h.i;
  existence
  <<Proof: existence of projection morphism>>
  uniqueness
  <<Proof: uniqueness of projection morphism>>
end;
@ %def proj Def16

<<Proof: existence of projection morphism>>=
proof
  deffunc F1() = product F;
  deffunc F2() = F.i;
  deffunc F3(Element of F1()) = $1/.i;
  consider p being Function of F1(), F2() such that
  A1: for x being Element of F1() holds p.x = F3(x)
  from FUNCT_2:sch 4;
  reconsider p as Function of product F, F.i;
  
  for a, b being Element of product F
  holds p.(a * b) = (p.a) * (p.b)
  proof
    let a, b be Element of product F;
    (p.a) * (p.b) = (p.a) * (b/.i) by A1
                 .= (a/.i) * (b/.i) by A1
                 .= (a * b)/.i by GROUP_7:1
                 .= p.(a * b) by A1;
    hence p.(a * b) = (p.a) * (p.b);
  end;
  then reconsider p as Homomorphism of product F,F.i by GROUP_6:def 6;
  take p;
  for h being Element of product F holds p.h = h.i
  proof
    let h be Element of product F;
    p.h = h/.i by A1;
    hence thesis;
  end;
  hence thesis;
end;
@ 

<<Proof: uniqueness of projection morphism>>=
proof
  let p1,p2 be Homomorphism of (product F), F.i;
  assume A1: for h being Element of product F holds p1.h = h.i;
  assume A2: for h being Element of product F holds p2.h = h.i;
  for x being object st x in the carrier of product F holds p1.x = p2.x
  proof
    let x be Element of product F;
    p1.x = x.i by A1;
    hence p1.x = p2.x by A2;
  end;
  hence p1 = p2 by FUNCT_2:def 8;
end;
@ 

\begin{theorem}
The projection morphism $\pi_{i}\colon\prod\mathcal{F}\to\mathcal{F}_{i}$
is surjective.
\end{theorem}

<<Theorem: the projection morphism is surjective>>=
theorem Th32:
  proj (F, i) is onto
proof
  for y being object st y in the carrier of F.i
  ex x being object st x in the carrier of product F & y = (proj (F,i)).x
  proof 
    let y be object;
    assume y in the carrier of F.i;
    then reconsider yy=y as Element of F.i;
    (1ProdHom (F, i)).yy in ProjGroup (F, i);
    then (1ProdHom (F, i)).yy in ProjSet (F, i) by GROUP_12:def 2;
    then consider x being Function, g being Element of F.i such that
    A1: x = (1ProdHom (F, i)).yy & dom x = I & x.i = g &
    for j being Element of I st j <> i holds x.j = 1_(F.j)
    by GROUP_12:2;
    
    the carrier of (product F) = product (Carrier F) by GROUP_7:def 2;
    then dom (1_(product F)) = I by PARTFUN1:def 2;
    then A2: y = ((1_(product F)) +* (i, y)).i by FUNCT_7:31
              .= g by A1, GROUP_12:def 3;
    A3: x in product F by A1,GROUP_2:41;
    take x;
    thus x in the carrier of product F by A3;
    thus y = (proj (F,i)).x by Def16, A1, A2, A3;
  end;
  then rng (proj (F,i)) = the carrier of F.i by FUNCT_2:10;
  hence proj (F, i) is onto by FUNCT_2:def 3;
end;
@ %def Th32

\begin{registration}
We should register the fact that $\pi_{i}$ is surjective.
\end{registration}

<<Register: projection morphism is surjective>>=
registration
  let I be non empty set;
  let F be Group-Family of I;
  let i be Element of I;
  cluster proj (F, i) -> onto;
  correctness by Th32;
end;
@ 

\begin{theorem}
The projection function of the underlying set [Cartesian product]
is a function from the product of underlying sets
$U(\pi_{i})\colon\prod U(\mathcal{F})\to U(\mathcal{F}_{i})$.
\end{theorem}

<<Theorem: underlying set theoretic aspects of projection>>=
theorem Th37:
  proj (Carrier F, i) is Function of product (Carrier F), the carrier of F.i
proof
  set X = product (Carrier F);
  set Y = the carrier of F.i;
  set f = proj (Carrier F, i);
  A1: dom f = X by CARD_3:def 16;
  for x being object st x in X holds f.x in Y
  proof
    let x be object;
    assume A2: x in X;
    then reconsider y=x as Element of product F by GROUP_7:def 2;
    f.y = y/.i by A1, A2, CARD_3:def 16;
    hence f.x in Y;
  end;
  
  hence f is Function of X,Y by A1, FUNCT_2:3;
end;
@ %def Th37

\begin{theorem}
The projection morphism acts on $g\in\prod\mathcal{F}$ by means of its
underlying function.
\end{theorem}

<<Theorem: projection acts on product group by means of its underlying function>>=
theorem Th38:
  for g being Element of product F
  holds proj (F, i) . g = proj (Carrier F, i) . g 
proof
  let g be Element of product F;
  set X = product (Carrier F);
  set f = proj (Carrier F, i);
  A1: dom f = X by CARD_3:def 16;
  g in product F;
  then g in dom f by A1, GROUP_7:def 2;
  then (proj (Carrier F, i)) . g = g.i by CARD_3:def 16;
  hence (proj (F, i)) . g = (proj (Carrier F, i)) . g by Def16;
end;
@ %def Th38

\begin{theorem}
We have $\pi_{i} = U(\pi_{i})$.
\end{theorem}

<<Theorem: $\pi_{i} = U(\pi_{i})$>>=
theorem
  proj (F, i) = proj (Carrier F, i)
proof
  set X = product (Carrier F);
  set Y = the carrier of F.i;
  product (Carrier F) = the carrier of (product F) by GROUP_7:def 2;
  then A1: proj (Carrier F, i) is Function of X,Y
           & proj (F, i) is Function of X,Y
  by Th37;
  for x being Element of X
  holds (proj (F, i)) . x = (proj (Carrier F, i)) . x
  proof
    let x be Element of X;
    x is Element of product F by GROUP_7:def 2;
    hence thesis by Th38;
  end;
  hence thesis by A1, FUNCT_2:63;
end;
@ 

\begin{theorem}
If $g\in\prod\mathcal{F}$ and $h\in\mathcal{F}_{i}$, then
$(g_{1},\dots,g_{i-1},h,g_{i+1},\dots)\in\prod\mathcal{F}$.
\end{theorem}

<<Theorem: if $g\in\prod\mathcal{F}$ and $h\in\mathcal{F}_{i}$, then [[g +* (i, h)]]$\in\prod\mathcal{F}$>>=
theorem Th40:
  for g being Element of product F
  for h being Element of F.i
  holds g +* (i, h) in product F
proof
  let g be Element of product F;
  let h be Element of F.i;
  g in product F;
  hence thesis by GROUP_19:24;
end;
@ %def Th40

\begin{theorem}
The kernel of the projection morphism $\ker(\pi_{i})$ consists of
$g\in\prod\mathcal{F}$ such that $\pi_{i}(g)=1$.
\end{theorem}

<<Theorem: elements of kernel of projection>>=
theorem
  for i being Element of I
  for g being Element of product F
  holds (g +* (i, 1_(F.i))) in Ker (proj (F, i)) 
proof
  let i be Element of I;
  let g be Element of product F;
  A1: dom g = I by GROUP_19:3;
  (g +* (i, 1_(F.i))) in product F by Th40;
  then reconsider h=(g +* (i, 1_(F.i))) as Element of product F;
  (proj (F, i)).h = h.i by Def16
                 .= 1_(F.i) by A1, FUNCT_7:31;
  hence (g +* (i, 1_(F.i))) in Ker (proj (F, i)) by GROUP_6:41;
end;
@ 

\begin{theorem}
Let $G_{1}$, $G_{2}$ be groups and $\varphi\colon G_{1}\to G_{2}$
be such that $\varphi(g)=g$ for every $g\in G_{1}$.
Then $G_{1}\subgroup G_{2}$.
\end{theorem}

<<Theorem: inclusion by any other name>>=
<<Lemma: [[1ProdHom]] is a morphism to the product group>>

<<Lemma: Range is contained in Codomain>>

<<Lemma: Pointwise-equal binary operators have identical images>>

theorem InclByAnyOtherName:
  for G1,G2 being Group
  for f being Homomorphism of G1, G2
  st (for g being Element of G1 holds f.g = g)
  holds G1 is Subgroup of G2
proof
  let G1,G2 be Group;
  let f be Homomorphism of G1, G2;
  assume A1: for g being Element of G1 holds f.g = g;
  A2: the carrier of G1 c= the carrier of G2
  proof
    for g being Element of the carrier of G1
    holds g in the carrier of G2
    proof
      let g be Element of the carrier of G1;
      (f.g) in the carrier of G2;
      hence g in the carrier of G2 by A1;
    end;
    hence thesis;
  end;
  set U1 = the carrier of G1;
  set U2 = the carrier of G2;
  A3: [: U1, U1 :] c= [: U2, U2 :] by A2, ZFMISC_1:96;
  dom (the multF of G2) = [: U2, U2 :]
  by FUNCT_2:def 1;
  then A5: dom ((the multF of G2)|[: U1, U1 :]) = [: U1, U1 :]
  by A2, ZFMISC_1:96, RELAT_1:62;
  A5a: dom ((the multF of G2)||U1) = [: U1, U1 :] by A5, REALSET1:def 2;
  A5b: ((the multF of G2)||U1)
  = ((the multF of G2)|[: U1, U1 :]) by REALSET1:def 2;
  A6: for a being Element of U1
  for b being Element of U1
  holds (the multF of G1).(a, b) = ((the multF of G2)||U1).(a, b)
  proof
    let a be Element of U1;
    let b be Element of U1;
    B2:
    (the multF of G2).([a, b])
     = ((the multF of G2)|[: U1, U1 :]).([a, b]) by A5, ZFMISC_1:87, FUNCT_1:47
    .= ((the multF of G2)||U1).([a, b]) by REALSET1:def 2
    .= ((the multF of G2)||U1).(a, b) by BINOP_1:def 1;
    set c = a * b;
    B4: (the multF of G2).(f.a, f.b)
      = (the multF of G2).(f.a, b) by A1
     .= (the multF of G2).(a, b) by A1;
    c = f.c by A1
     .= (f.a) * (f.b) by GROUP_6:def 6
     .= (the multF of G2).(a, b) by B4;
    hence (the multF of G1).(a, b) = ((the multF of G2)||U1).(a, b)
    by B2, BINOP_1:def 1;
  end;
  ((the multF of G2)||U1) is BinOp of U1
  proof
    B1: rng (the multF of G1) c= U1 by LmRangeContainedInCod;
    B2a: ((the multF of G2)||U1) is Function of [:U1,U1:], U2
    by A3, A5b, FUNCT_2:32;
    B2: ((the multF of G2)||U1) is Function of [: U1, U1 :],
    rng ((the multF of G2)||U1) by A5a, FUNCT_2:1;
    B3: rng ((the multF of G2)||U1) c= U1 by B1, A6, B2a, LmEqRng;

    ([: U1, U1 :] <> {} implies (rng ((the multF of G2)||U1)) <> {})
    proof
      assume [: U1, U1 :] <> {};
      then consider x being object such that
      C2: x in [: U1, U1 :]
      by XBOOLE_0:def 1;
      x in dom ((the multF of G2)||U1) by C2, A5, REALSET1:def 2;
      hence (rng ((the multF of G2)||U1)) <> {} by FUNCT_1:3;
    end;
    hence thesis by B2, B3, FUNCT_2:6;
  end;
  hence G1 is Subgroup of G2 by A2, A6, BINOP_1:2, GROUP_2:def 5;
end;
@ %def InclByAnyOtherName

\begin{lemma}
The isomorphism $\varphi$ of a direct factor $\mathcal{F}_{i}$ with its
subgroup in the product $\prod\mathcal{F}$ is a homomorphism to the product.
\end{lemma}

<<Lemma: [[1ProdHom]] is a morphism to the product group>>=
LmProdhom:
  1ProdHom (F, i) is Homomorphism of F.i, product F
proof
  (ProjGroup (F,i)) is Subgroup of product F &
  1ProdHom (F, i) is Homomorphism of F.i, ProjGroup (F, i);
  hence thesis by Th25;
end;
@ %def LmProdhom

\begin{lemma}
If $f\colon X\to Y$ is a function of sets and $Y\neq\emptyset$, then
$f(X)\subset Y$.
\end{lemma}

<<Lemma: Range is contained in Codomain>>=
theorem LmRangeContainedInCod:
  for X,Y being set
  for f being Function of X,Y
  holds rng f c= Y
proof
  let X,Y be set;
  let f be Function of X,Y;
  per cases;
  suppose A1: Y <> {};
    for y being object st y in rng f holds y in Y
    proof
      let y be object;
      assume y in rng f;
      then consider x being object such that
      B2: x in dom f & y = f.x
      by FUNCT_1:def 3;
      thus y in Y by A1,B2,FUNCT_2:5;
    end;
    hence rng f c= Y by TARSKI:def 3;
  end;
  suppose Y = {};
    hence rng f c= Y;
  end;
end;
@ %def LmRangeContainedInCod

\begin{lemma}
If we have two binary operators $f\colon X\times Y\to Z$ and
$g\colon X\times Y\to W$ such that for each $x\in X$ and $y\in Y$
that $f(x,y)=g(x,y)$, then their images are equal $f(X\times Y)=g(X\times Y)$.
\end{lemma}

<<Lemma: Pointwise-equal binary operators have identical images>>=
LmEqRng:
  for X,Y,Z,W being set st Z <> {} & W <> {}
  for f being Function of [:X,Y:],Z
  for g being Function of [:X,Y:],W
  st (for a being Element of X, b being Element of Y holds f.(a,b) = g.(a,b))
  holds rng f = rng g
proof
  let X,Y,Z,W be set;
  assume A0: Z <> {} & W <> {};
  let f be Function of [:X,Y:],Z;
  let g be Function of [:X,Y:],W;
  assume A1: for a being Element of X, b being Element of Y
  holds f.(a,b) = g.(a,b);
  A2: dom g = [:X,Y:] & dom f = [:X,Y:] by A0, FUNCT_2:def 1;
  for z being object holds z in rng f iff z in rng g
  proof
    let z be object;
    thus z in rng f implies z in rng g
    proof
      assume z in rng f;
      then consider x being object such that
      B2: x in dom f and
      B3: z = f.x
      by FUNCT_1:def 3;
      consider a,b being object such that
      B4: a in X and
      B5: b in Y and
      B6: [a, b] = x
      by B2, ZFMISC_1:def 2;
      reconsider a as Element of X by B4;
      reconsider b as Element of Y by B5;
      f.x = f.(a, b) by B6, BINOP_1:def 1
         .= g.(a, b) by A1
         .= g.x by B6, BINOP_1:def 1;
      hence z in rng g by A2, B2, B3,FUNCT_1:3;
    end;
    thus z in rng g implies z in rng f
    proof
      assume z in rng g;
      then consider x being object such that
      B2: x in dom g and
      B3: z = g.x
      by FUNCT_1:def 3;
      consider a,b being object such that
      B4: a in X and
      B5: b in Y and
      B6: [a, b] = x
      by B2, ZFMISC_1:def 2;
      reconsider a as Element of X by B4;
      reconsider b as Element of Y by B5;
      g.x = g.(a, b) by B6, BINOP_1:def 1
         .= f.(a, b) by A1
         .= f.x by B6, BINOP_1:def 1;
      hence z in rng f by A2, B2, B3, FUNCT_1:3;
    end;
  end;
  hence rng f = rng g by TARSKI:2;
end;
@ %def LmEqRng

\begin{theorem}
The projection morphism is the left-inverse for the [[1ProdHom]]
morphism.
\end{theorem}

<<Theorem: [[proj]] is left-inverse for [[1ProdHom]]>>=
theorem Th65:
  (proj (F,i)) * (1ProdHom (F, i)) = id (the carrier of F.i)
proof
  set U = the carrier of F.i;
  A1: (1ProdHom (F, i)) is Homomorphism of F.i, product F by GROUP_19:6;

  for x being Element of U
  holds ((proj (F,i)) * (1ProdHom (F, i))).x = x
  proof
    let x be Element of U;
    B1: dom (1_(product F)) = I by GROUP_19:3;
    B2: (1ProdHom (F, i)).x = (1_(product F)) +* (i, x) by GROUP_12:def 3;
    (1ProdHom (F, i)).x in (ProjGroup (F,i));
    then (1ProdHom (F, i)).x in product F by GROUP_2:40;
    then B3: (proj (F, i)).((1_(product F)) +* (i, x))
    = ((1_(product F)) +* (i, x)).i by B2, Def16;
    dom (1ProdHom (F, i)) = U by FUNCT_2:def 1;
    then ((proj (F,i)) * (1ProdHom (F, i))).x
     = (proj (F, i)).((1ProdHom (F, i)).x) by FUNCT_1:13
    .= (proj (F, i)).((1_(product F)) +* (i, x)) by GROUP_12:def 3
    .= x by B1, B3, FUNCT_7:31;
    hence thesis;
  end;

  hence thesis by A1, FUNCT_2:124;
end;
@ 

\begin{theorem}
The inclusion morphism of a direct factor into the product group
([[1ProdHom (F,i)]]) when composed by the projection $\pi_{j}$ (for
$j\neq i$) is the same thing as the trivial morphism.
\end{theorem}

<<Theorem: projecting image of [[1ProdHom]] onto different component is trivial>>=
theorem Th65b:
  for i,j being Element of I st i <> j
  holds (proj (F,j)) * (1ProdHom (F,i)) = 1:(F.i, F.j)
proof
  let i,j be Element of I;
  assume A1: i <> j;
  set U = the carrier of F.i;
  A2: dom 1:(F.i, F.j) = U & dom ((proj (F,j)) * (1ProdHom (F,i))) = U
  proof
    thus dom 1:(F.i, F.j) = U;
    B1: rng (1ProdHom (F,i)) c= the carrier of ProjGroup (F, i)
    by RELAT_1:def 19;
    the carrier of ProjGroup (F,i) c= the carrier of product F
    by GROUP_2:def 5;
    then (1ProdHom (F,i)) is (the carrier of product F)-valued
    by B1, XBOOLE_1:1, RELAT_1:def 19;
    then dom ((proj (F,j)) * (1ProdHom (F,i))) = dom (1ProdHom (F,i))
    by FUNCT_2:123;
    hence thesis by FUNCT_2:def 1;
  end;
  for x being Element of U
  holds ((proj (F,j)) * (1ProdHom (F,i))).x = (1:(F.i, F.j)).x
  proof
    let x be Element of U;
    B1: dom (1ProdHom (F,i)) = U by FUNCT_2:def 1;
    (1ProdHom (F,i)).x in ProjGroup (F, i);
    then (1_(product F) +* (i, x)) in ProjGroup (F, i) by GROUP_12:def 3;
    then B2: (1_(product F) +* (i, x)) in product F by GROUP_2:40;
    ((proj (F,j)) * (1ProdHom (F,i))).x
     = (proj (F,j)).((1ProdHom (F,i)).x) by B1, FUNCT_1:13
    .= (proj (F,j)).(1_(product F) +* (i, x)) by GROUP_12:def 3
    .= (1_(product F) +* (i, x)).j by Def16, B2
    .= (1_(product F)).j by A1,FUNCT_7:32
    .= (1:(F.i, F.j)).x by GROUP_7:6;
    hence ((proj (F,j)) * (1ProdHom (F,i))).x = (1:(F.i, F.j)).x;
  end;
  hence (proj (F,j)) * (1ProdHom (F,i)) = 1:(F.i, F.j) by A2;
end;
@ %def Th65b
