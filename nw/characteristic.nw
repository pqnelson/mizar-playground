% -*- mode: poly-noweb; noweb-code-mode: mizar-mode; -*-
\chapter{Characteristic Subgroups}

\N{Structure of an article}
We call a Mizar file/script an ``article''. While developing a Mizar
article, the main body is stored in a [[TEXT/]] subdirectory. As I
understand it, the casing of the directory matters (because there are
DOS computers which have case-sensitive file systems\dots or something).
Every Mizar article looks like:

<<TEXT/tmp.miz>>=

<<Environment for [[tmp.miz]]>>

<<[[tmp.miz]] article body>>

@

\M
Each Mizar article has an associated ``vocabular file'' which lists the
\emph{new} terms introduced. It's stored in a [[DICT/]]
subdirectory. Terms are prefixed with the following:
\begin{itemize}
\item [[R]] for predicate (like [[Rare_isomorphic]] for a new predicate [[are_isomorphic]])
\item [[O]] for functor (e.g., [[Oid]] for [[id]])
\item [[M]] for mode (e.g., [[MSubgroup]] for [[Subgroup]])
\item [[G]] for structure (e.g., [[GmultLoopStr_0]] for [[multLoopStr_0]])
\item [[U]] for selectors (e.g., [[Ucarrier]] in [[STRUCT_0]] gives us a
  way to write [[the carrier of X]])
\item [[V]] for attributes (so [[Vcharacteristic]] is a new attribute ``characteristic'')
\item [[K]] for left functor brackets (like \verb#[:# in [[ZFMISC_1]])
\item [[L]] for right functor brackets (like the corresponding \verb#:]#
  in [[ZFMISC_1]])
\end{itemize}

\M
For our immediate purposes, we want to prove theorems concerning
characteristic subgroups. We can start with checking if the vocabulary
word ``characteristic'' has been introduced by running on the command
line ``\verb#findvoc -w "characteristic"#'' to see if any article has
already introduced it. (None has, so far.) Since we want to describe
``characteristic Subgroups'' and ``Subgroup'' is a mode defined in
[[GROUP_2]], it seems reasonable to introduce a new adjective
[attribute] ``characteristic'' Thus we begin:

<<DICT/TMP.VOC>>=
Vcharacteristic

@

\section{Environment}

\M
The header, or ``environment part'', tells Mizar what mathematics needs
to be imported from existing Mizar articles found in the MML.

<<Environment for [[tmp.miz]]>>=
environ
 <<[[tmp.miz]] vocabularies>>;
 <<[[tmp.miz]] constructors>>;
 <<[[tmp.miz]] notations>>;
 <<[[tmp.miz]] registrations>>;
 <<[[tmp.miz]] requirements>>;
 <<[[tmp.miz]] definitions>>;
 <<[[tmp.miz]] equalities>>;
 <<[[tmp.miz]] expansions>>;
 <<[[tmp.miz]] theorems>>;
 <<[[tmp.miz]] schemes>>;
 <<[[tmp.miz]] requirements>>;

@

\subsection{Vocabularies, Notations, Constructors}

\N{Vocabularies}\label{par:characteristic:vocabularies}
The [[vocabularies]] refers to the identifiers defined. For example,
[[Isomorphism]] may be found in [[RING_3]]. So even if I wanted to use
[[Isomorphism]] as a token, I need to add [[RING_3]] to
the vocabularies list. Similarly, [[MOD_4]] introduces the tokens
[[Endomorphism]] and [[Automorphism]], which I want to use, so I add
them, too.

<<[[tmp.miz]] vocabularies>>=
vocabularies RING_3, MOD_4, TMP,
  <<Functions and subset tokens>>,
  <<Group and subgroups tokens>>,
  <<Group conjugation and normal subgroups tokens>>

@

\M
We need to recognize the tokens found in rudimentary set theory, so we
begin with importing the usual suspects.

<<Functions and subset tokens>>=
MSSUBFAM, RELAT_1, TARSKI, FUNCT_1, ZFMISC_1, NUMBERS, WELLORD1,
SUBSET_1, XBOOLE_0

@

\M
Characteristic subgroups requires recognizing tokens about\dots groups,
and subgroups.

<<Group and subgroups tokens>>=
STRUCT_0, GROUP_1, GROUP_2, SUBSET_1, GROUP_4, GROUP_5,
MSSUBFAM, GROUP_6, BINOP_1, BINOP_2, ALGSTR_0, REALSET1,
AUTGROUP

@

\M
[[NEWTON]] defines the token [[|^]], used as infix operator [[a |^ b]]
which is Mizar notation for $a^{b}$. Mizar follows group theorist
notation of writing $g^{h} = h^{-1}gh$ for conjugation. Also observe
that [[normal]] is introduced in [[PRE_TOPC]], so we need to include
that, as well.

<<Group conjugation and normal subgroups tokens>>=
NEWTON, PRE_TOPC, GROUP_3

@

\N{Constructors}
But the vocabularies just permits Mizar's parser to \emph{recognize}
terms. For the \emph{meaning} of these terms, we need to import the
\emph{constructors}. But if a constructor uses \emph{another article}'s
constructors, we need to also import that other article as well.

Often we just copy the articles imported for the notations section, but
in my experience it's often a strict subset of the notations. I'm lazy,
so I'll just copy the constructor imports:

<<[[tmp.miz]] constructors>>=
constructors <<set theoretic notation for [[tmp.miz]]>>,
  <<group theoretic notation for [[tmp.miz]]>>

@

\N{Notations}
Now we need to import the functor patterns to ``couple'' the definitions
and notations. Usually this is just the constructor list.

<<[[tmp.miz]] notations>>=
notations <<set theoretic notation for [[tmp.miz]]>>,
  <<group theoretic notation for [[tmp.miz]]>>

@

\M The basics of Tarski--Grothendieck set theory may be found in
[[TARSKI]]. Partial functions are introduced in [[PARTFUN1]]. Binary
operations applied to functions [[FUNCOP_1]] will be necessary later
on. And fancy functions from sets to sets, like [[Permutation]], is
defined in [[FUNCT_2]]. There are few random odds and ends, like
[[NUMBERS]] for subsets of complex numbers

<<set theoretic notation for [[tmp.miz]]>>=
TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, RELAT_1, FUNCT_1,
RELSET_1, PARTFUN1, FUNCT_2, FUNCOP_1, NUMBERS

@

\M
The group theoretic notions are a grab bag of binary operators
([[BINOP_1]] and [[BINOP_2]]), prerequisites for algebraic structures
([[STRUCT_0]] and [[ALGSTR_0]]), primordial group theoretic articles
([[REALSET1]]), and the relevant group theory articles.

<<group theoretic notation for [[tmp.miz]]>>=
BINOP_1, BINOP_2, STRUCT_0, ALGSTR_0, REALSET1, GROUP_1, GROUP_2,
GROUP_3, GROUP_4, GROUP_5, GROUP_6, GRSOLV_1, AUTGROUP

@

\subsection{Registrations, Definitions, Theorems, Schemes}

\N{Registrations}
We often cluster adjectives together with registrations, or have one
adjective imply another automatically (like how a characteristic
Subgroup is always normal). We import these using the registrations
portion of the environment. For our purposes, we may need basic facts
about relations ([[RELAT_1]]), functions and partial functions ([[FUNCT_1]],
[[PARTFUN1]], [[FUNCT_2]]), relations between sets ([[RELSET_1]]).

<<[[tmp.miz]] registrations>>=
registrations <<Register set theoretic clusters>>,
  <<Register group theoretic clusters>>

@

\M
The clusters we want to use from set theory are defined in the ``same''
scattering of places.

<<Register set theoretic clusters>>=
XBOOLE_0, RELAT_1, FUNCT_1, PARTFUN1, RELSET_1, FUNCT_2

@

\M
We also need to register adjectives germane to group theory.

<<Register group theoretic clusters>>=
STRUCT_0, GROUP_1, GROUP_2, GROUP_3, GROUP_6

@

\N{Definitions} When using a definition $f := M$, we need to cite it in
a proof. Specifically, automatically unfolding predicates from specific
articles. If we want this to be automated, we can cite the article in
the [[definitions]] portion of the [[environ]].

<<[[tmp.miz]] definitions>>=
definitions <<Include set theoretic definitions>>,
  <<Include group theoretic definitions>>

@

\begin{remark}
  Kornilowicz~\cite[see \S{5.1}]{kornilowicz-definitional-expansion} that:
  ``Environment directive [[definitions]] is used for importing two different kinds of information from the database: definitional expansions used by REASONER and expansions of terms defined by equals used by EQUALIZER.''
\end{remark}

\M Arguably, we want to be using basic predicates concerning subsets
([[SUBSET_1]]), functions ([[FUNCT_1]] and [[FUNCT_2]]), and set theory
([[TARSKI]]), so let's just add them.

<<Include set theoretic definitions>>=
SUBSET_1, FUNCT_1, TARSKI, FUNCT_2

@

\M
But we also want to use facts concerning normal subgroups ([[GROUP_3]])
and the automorphism group $\aut(G)$ ([[AUTGROUP]]).

<<Include group theoretic definitions>>=
GROUP_3, AUTGROUP

@

\N{Theorems}
The [[vocabularies]] allows Mizar's scanner and parser to
\emph{recognize} terms. The [[constructors]] and [[notations]] allows us
to use the patterns and constructors for terms. But if we want to cite
theorems and definitions in proofs (i.e., if we want to use the
\emph{results} of previous articles), then we need to add those cited
articles to the [[theorems]] environment.

<<[[tmp.miz]] theorems>>=
theorems
  <<Import set-theoretic theorems>>,
  <<Import group-theoretic theorems>>

@

\M We have the usual cast of set theoretic characters.
<<Import set-theoretic theorems>>=
TARSKI_0, TARSKI, SUBSET_1, RELSET_1, FUNCT_1, FUNCT_2, ZFMISC_1,
XBOOLE_0, RELAT_1

@

\M Again, we import the usual group theoretic theorems.
<<Import group-theoretic theorems>>=
GROUP_1, GROUP_2, GROUP_3, GROUP_5, GROUP_6, REALSET1, STRUCT_0,
GRSOLV_1, AUTGROUP

@

\N{Schemes}
If we want to cite and use a scheme defined elsewhere, then we need the
article's name cited in the [[schemes]] portion of the environment.

<<[[tmp.miz]] schemes>>=
schemes BINOP_1, FUNCT_2

@

\subsection{\dots and the rest}

\N{Equalities}
This seems to be introduced around 2015, the only documentation I could
find was in Kornilowics~\cite{kornilowicz-definitional-expansion}.
Expansions of terms defined by [[equals]] are imported by a new
[[environ]] directive [[equalities]].

<<[[tmp.miz]] equalities>>=
equalities BINOP_1, REALSET1, GROUP_2, GROUP_3, ALGSTR_0

@

\N{Expansions}
Import expansions of predicates and adjectives from the specified
articles.

<<[[tmp.miz]] expansions>>=
expansions BINOP_1, FUNCT_2

@

\N{Requirements} Within mathematics, there's a lot of implicit
knowledge. Mizar automates some of that with [[requirements]]
inclusions. For example, if we want to show [[x in X]]
(Mizar for the primitive binary predicate $x\in X$) implies
the typing relation [[x is Element of X]], well, that's ``obvious'' to
us humans, and we can make it obvious to Mizar as well using the proper
requirements.

\begin{remark}
As I understand it (from Wiedijk's excellent ``Writing a Mizar Article
in 9 easy steps''), the only possibilities for the [[requirements]] are:
[[BOOLE]], [[SUBSET]], [[NUMERALS]], [[ARITHM]], [[REAL]].
\end{remark}

<<[[tmp.miz]] requirements>>=
requirements BOOLE, SUBSET

@


\section{Article Body}

\M
The article body is where the magic happens.

<<[[tmp.miz]] article body>>=
<<Helper lemmas and registrations for [[tmp.miz]]>>

<<Inner and outer automorphisms>>
<<Group isomorphisms>>

@

\subsection{Preparatory results}

\M
We begin by registering the identity function as being surjective and
bijective. This should have been done in [[FUNCT_2]], but hey, what can
you do?

<<Helper lemmas and registrations for [[tmp.miz]]>>=
begin :: preparatory work
reserve X for set;

registration
  let X;
  cluster id X -> onto;
  coherence;
end;

registration
  let X;
  cluster id X -> bijective;
  coherence;
end;

@

\M
We also need to prove that, if we have a subgroup $H\subgroup G$ and
$h\in G$ is an arbitrary element of the underlying set, then $h\in H$
implies the typing judgement ``[[h is Element of H]]''.

<<Helper lemmas and registrations for [[tmp.miz]]>>=
LmSubgroupElt:
for G being Group
for H being Subgroup of G
for h being Element of G st h in H holds h is Element of H
proof
  let G be Group,
      H be Subgroup of G,
      h be Element of G;
  assume h in H;
  then h is Element of the carrier of H by STRUCT_0:def 5;
  then h is Element of H;
  hence thesis;
end;

@

\N{Restriction of Group Morphisms to Subgroups}
Mizar proves that, if $f\colon X\to Y$ is a set theoretic function and
$A\subset X$ is an arbitrary subset, then $\forall a\in X$ we have
$a\in A\implies f|_{A}(a)=f(a)$. But this doesn't generalize to
morphisms, sadly, because a group is like a chocolate-covered set.

So we just prove for any pair of groups $G_{1}$ and $G_{2}$,
for any subgroup $H\subgroup G_{1}$,
for any group morphism $f\colon G_{1}\to G_{2}$, and for arbitrary $h\in G_{1}$,
we have $h\in H\implies f|_{H}(h) = f(h)$. The reasoning is that we can
always look at the set-theoretic function $U(f)$ underlying $f$, then
piggie-back off earlier results establishing the desired claim
(Theorem~49 of [[FUNCT_1]], to be precise).

<<Helper lemmas and registrations for [[tmp.miz]]>>=
Lm3: for G1,G2 being Group
for H being Subgroup of G1
for f being Homomorphism of G1,G2
for h being Element of G1
st h in H
holds (f|H).h = f.h
proof
  let G1,G2 be Group;
  let H be Subgroup of G1;
  let f be Homomorphism of G1,G2;
  let h be Element of G1;
  assume h in H;
  then h is Element of H by LmSubgroupElt;
  then (f|(the carrier of H)).h = f.h by FUNCT_1:49;
  then (f|H).h = f.h by GRSOLV_1:def 2;
  hence thesis;
end;

@

\M
Let $H_{1}\subgroup G$ and $H_{2}\subgroup G$.
If $H_{1}\subgroup H_{2}$ and $H_{2}\subgroup H_{1}$, then
$H_{1}=H_{2}$. Pretty simple, right? \dots I'm not sure I'll need this,
but here it is if I do.

<<Sandwich Subgroup Equality Theorem>>=
LmSandwich: for H1 being strict Subgroup of G
for H2 being strict Subgroup of G
st (H1 is Subgroup of H2) & (H2 is Subgroup of H1)
holds H1 = H2
proof
  let H1 be strict Subgroup of G;
  let H2 be strict Subgroup of G;
  assume H1 is Subgroup of H2 & H2 is Subgroup of H1;
  then the multMagma of H1 = the multMagma of H2 by GROUP_2:55;
  hence thesis;
end;

@

\M Let $H\subgroup G$ be such that $\forall a\in G, a^{-1}Ha=H$.
Then $H\normalSubgroup G$ is a normal subgroup. The current theorems in
[[GROUP_3]] require $H$ to be a \emph{strict} subgroup, but this
strictness condition is not necessary.

<<Subgroups invariant under conjugation are normal>>=
LmNormalSubgroup:
for G being Group
for H being Subgroup of G
st (for a being Element of G holds H |^ a = H)
holds H is normal Subgroup of G
proof
  let G be Group;
  let H be Subgroup of G;
  assume A0: for a being Element of G holds H |^ a = H;
  then for a being Element of G holds the carrier of H |^ a = the carrier of H;
  then for a being Element of G holds the multMagma of H = H |^ a by GROUP_2:59;
  hence H is normal Subgroup of G by GROUP_3:def 13;
end;

@

\subsection{Automorphisms}

\M Now, we have a section for defining inner and outer group
automorphisms. A \emph{group automorphism} is just a bijective endomorphism on
a group, and an \emph{endomorphism} is a group morphism whose codomain
is its domain.

Remember (\S\ref{par:characteristic:vocabularies}), although we are
defining new terms [[Endomorphism]] and [[Automorphism]], we do not need
to add them to our [[DICT/TMP.VOC]] file. Why not? Because the tokens
are already included from [[MOD_4]].

<<Inner and outer automorphisms>>=
begin

<<Reserve symbols for inner and outer automorphisms>>
<<Define [[Endomorphism]]>>
<<Register [[bijective]] for [[Endoomorphism]]>>
<<Define [[Automorphism]]>>
<<Endomorphisms preserve the trivial subgroup>>
<<Automorphisms map trivial subgroups to themselves>>
<<Define $\Id_{G}$>>
<<[[Id_G]] is the same as [[id the carrier of G]]>>
<<Register [[Id_G]] is bijective>>
<<Define [[inner]] for Automorphism>>
<<[[Id_G]] is effectively inner>>
<<Register [[inner]] for [[Automorphism]]>>
<<Relate [[Automorphism of G]] to elements of [[Aut G]]>>
<<Theorem: $f$ in [[InnAut G]] iff $f$ is [[inner Automorphism of G]]>>

@

\M Note we just used the symbol [[G]] for a generic group, so we add to
the reserved symbols this association.

<<Reserve symbols for inner and outer automorphisms>>=
reserve G for Group;

@

\M A group endomorphism of $G$ is just a homomorphism $f\colon G\to G$.

<<Define [[Endomorphism]]>>=
definition :: Def1
  let G;
  mode Endomorphism of G is Homomorphism of G,G;
end;

@

\M\label{par:characteristic:register-bijective-for-endomorphism}
We begin by registering the attribute [[bijective]] for group
endomorphisms. This will effectively create a subtype of
[[Endomorphism of G]], the aptly named [[bijective Endomorphism of G]].
Most of our work has been done in article [[GROUP_6]] by
Theorem~38 (which effectively states the function on the underlying set
[[id (the carrier of G)]] is a multiplicative function and so nearly a
group morphism that we can reconsider it as an [[Endomorphism]]), and
the fact that [[id X]] is bijective.

<<Register [[bijective]] for [[Endoomorphism]]>>=
registration
  let G;
  cluster bijective for Homomorphism of G,G;
  existence
  proof
    reconsider i = id the carrier of G as Homomorphism of G,G by GROUP_6:38;
    i is bijective;
    hence thesis;
  end;
end;

@

\N{Definition (Automorphism)}
Now we have an [[Automorphism of G]] be just a bijective endomorphism.

<<Define [[Automorphism]]>>=
definition :: Def2
  let G;
  mode Automorphism of G is bijective Endomorphism of G;
end;

@

\M For any group $G$ and endomorphism $f\in\End(G)$, we have the trivial
subgroup $\trivialSubgroup\subgroup G$ be preserved under $f$; i.e.,
$f(\trivialSubgroup)=\trivialSubgroup$.

<<Endomorphisms preserve the trivial subgroup>>=
theorem Th1:
  Image (f|(1).G) = (1).G
proof
  Image(f|(1).G) = f .: ((1).G) by GRSOLV_1:def 3
  .= (1).G by GRSOLV_1:11;
  hence thesis;
end;

@

\M Now we need to tell Mizar that $f$ is an endomorphism of $G$.

<<Reserve symbols for inner and outer automorphisms>>=
reserve f for Endomorphism of G;

@

\M If $\phi$ is an automorphism of a group $G$, then
the image of the trivial subgroup under $\phi$ is a subgroup of itself
$\phi(\trivialSubgroup)\subgroup\trivialSubgroup$. We have, from
Theorem~[[Th1]], that $\phi(\trivialSubgroup)=\trivialSubgroup$ since
$\phi$ (being an automorphism) is also an endomorphism. And [[GROUP_2]]
proves that $G$ is a subgroup of itself in Theorem~[[Th54]].

<<Automorphisms map trivial subgroups to themselves>>=
:: In particular, the trivial proper subgroup (1).G of G is invariant
:: under inner automorphisms, and thus is a characteristic subgroup.
theorem Th2:
  for phi being Automorphism of G
  holds Image(phi|(1).G) is Subgroup of (1).G
proof
  let phi be Automorphism of G;
  (1).G is Subgroup of (1).G by GROUP_2:54;
  hence Image(phi|(1).G) is Subgroup of (1).G by Th1;
end;

@

\N{Identity Group Endomorphism}
I found it tedious to write [[id (the carrier of G)]] over and over
again, so I wrote a shortcut [[Id_G]] for $\Id_{G}$.

<<Define $\Id_{G}$>>=
definition :: Def3
  let G;
  func Id_G -> Endomorphism of G means
  :Def3:
  for x being Element of G holds it.x=x;
  existence
  <<Proof that $\Id_{G}$ exists>>
  uniqueness
  <<Proof $\Id_{G}$ is unique>>
end;

@

\M We need to add [[Id_]] to our vocabulary.

<<DICT/TMP.VOC>>=
OId_

@

\N{Proof ($\Id_{G}$ exists)}
Similar to the proof (\S\ref{par:characteristic:register-bijective-for-endomorphism})
that there exists a bijective endomorphism, the proof that $\Id_{G}$
exists amounts to reconsidering [[id]] as an endomorphism. Earlier work
in [[FUNCT_1]] proved (in Theorem~17) the identity function satisfies
$\forall x\in X, \id_{X}(x)=x$.

<<Proof that $\Id_{G}$ exists>>=
proof
  reconsider i = id (the carrier of G) as Homomorphism of G,G by GROUP_6:38;
  i.x = x by FUNCT_1:17;
  hence thesis;
end;

@

\N{Proof (Uniqueness of $\Id_{G}$)}
The usual strategy is to consider two arbitrary endomorphisms
$\Id^{(1)}_{G}$ and $\Id^{(2)}_{G}$ satisfying the definition of
[[Id_]], then prove $\Id^{(1)}_{G} = \Id^{(2)}_{G}$.

If we wanted to be completely pedantic, we could cite Theorem~12 from
[[FUNCT_2]] which states for any functions of sets
$f_{1}$, $f_{2}\colon X\to Y$ we have $\forall x\in X, f_{1}(x)=f_{2}(x)$
implies $f_{1}=f_{2}$.

<<Proof $\Id_{G}$ is unique>>=
proof
  let Id1, Id2 be Endomorphism of G such that
  A1: for x being Element of G holds Id1.x=x and
  A2: for x being Element of G holds Id2.x=x;
  let x be Element of G;
  thus Id1.x = x by A1
            .= Id2.x by A2;
  thus thesis;
end;

@

\M\label{thm:characteristic:identity-endomorphism-is-identity-function}
We should now have some sanity check that [[Id_G]] really is
the identity group morphism $\Id_{G}$ that \emph{we} think it is.

<<[[Id_G]] is the same as [[id the carrier of G]]>>=
theorem Th3:
  Id_G = id (the carrier of G)
proof
  let x be Element of G;
  thus A4: (Id_G).x = x by Def3
                   .= (id (the carrier of G)).x;
  thus thesis;
end;

@

\M
Now we should automatically associate $\Id_{G}$ is bijective. This
requires proving a couple of helper lemmas establishing injectivity and
surjectivity.

<<Register [[Id_G]] is bijective>>=
<<[[Id_G]] is injective>>
<<[[Id_G]] is surjective>>

registration let G;
  cluster Id_G -> bijective;
  coherence by Lm1,Lm2;
end;

@

\N{Identity is injective}
The proof is straightforward since we've established (\S\ref{thm:characteristic:identity-endomorphism-is-identity-function}) the group
endomorphism $\Id_{G}$ coincides with the set-theoretic function $\id_{U(G)}$
on the underlying set $U(G)$ of the group $G$.

<<[[Id_G]] is injective>>=
Lm1: Id_G is one-to-one
proof
  id (the carrier of G) is one-to-one;
  hence thesis by Th3;
end;

@

\N{Identity is surjective}
As with establishing injectivity, it's straightforward.

<<[[Id_G]] is surjective>>=
Lm2: Id_G is onto
proof
  id (the carrier of G) is onto;
  hence thesis by Th3;
end;

@

\N{Definition: Inner Automorphism}
We call a group automorphism $f\in\Aut(G)$ \define{inner} if there is a
group element $g\in G$ such that for all $x\in G$ we have $f(x) = x^{g} = g^{-1}xg$.
That is, $f$ is just conjugation by a fixed group element.

<<Define [[inner]] for Automorphism>>=
definition :: Def5
  let G;
  let IT be Automorphism of G;
  attr IT is inner means
  :Def5:
  ex a being Element of G st
  for x being Element of G holds IT.x = x |^ a;
end;
<<Outer as antonym of inner>>

@

\M We also recall that an automorphism is called \define{Outer} if it is
not inner. Mizar let's us do this with the [[antonym]] construct within
a [[notation]] block.

<<Outer as antonym of inner>>=
notation
  let G be Group, f be Automorphism of G;
  antonym f is outer for f is inner;
end;

@

\N{Update our vocabular file}
Before rushing off to prove properties concerning inner and outer
automorphisms, we should add the attributes to our vocabulary file.


<<DICT/TMP.VOC>>=
Vinner
Vouter

@

\N{Theorem: $\Id_{G}$ is effectively inner}\label{thm:characteristic:id-inner}
We will be registering ``inner'' as an attribute for ``Automorphism
of $G$''. This will require proving that there exists an inner
Automorphism of $G$. I've found the trivial examples are often best for
establishing the existence of such things, so we will prove [[Id G]] is
an inner Automorphism. This uses the fact, if $e\in G$ is the identity
element, then for any $g\in G$ we have conjugation $g^{e} = e^{-1}ge=g$
(proven in Theorem~19 of [[GROUP_3]]).

<<[[Id_G]] is effectively inner>>=
theorem Th5:
  for x being Element of G holds (Id_G).x = x |^ 1_G
proof
  let x;
  (Id_G).x = x by Def3
          .= x |^ 1_G by GROUP_3:19;
  hence thesis;
end;

@

\M Now registering [[inner]] for [[Automorphism]].

<<Register [[inner]] for [[Automorphism]]>>=
registration
  let G;
  cluster inner for Automorphism of G;
  existence
  <<Proof of existence of an inner Automorphism>>
end;

@

\N{Proof} The proof is a two punch knock-out. We take [[Id_G]] to be the
morphism, [[1_g]] the group's identity element to be the element
[[Id_G]] conjugates by, then from earlier (\S\ref{thm:characteristic:id-inner})
we have [[Id_G]] be inner.

<<Proof of existence of an inner Automorphism>>=
proof
  take Id_G;
  take 1_G;
  thus thesis by Th5;
end;

@

\N{Theorem ($f\in\aut(G)\iff f$ is [[Automorphism of G]])}
Mizar has [[AUTGROUP]], an article which defines [[Aut G]] the
collection of functions on the underlying set $U(G)$ of a group $G$. We
can prove that $f\in\aut(G)$ if and only if $f$ is [[Automorphism of G]].

<<Relate [[Automorphism of G]] to elements of [[Aut G]]>>=
theorem Th8:
  for G being strict Group, f being object
  holds (f in Aut G) iff (f is Automorphism of G)
proof
  let G be strict Group;
  let f be object;
  thus f in Aut G implies f is Automorphism of G
  <<Proof $f\in\aut(G)\implies f$ is [[Automorphism of G]]>>
  thus f is Automorphism of G implies f in Aut G
  <<Proof $f\in\aut(G)\impliedby f$ is [[Automorphism of G]]>>
  thus thesis;
end;

@

\N{Proof forwards direction} The forward direction is
straightforward. The only subtlety is, since we didn't assume anything
about $f$, we should establish it's an endomorphism of $G$ along the way,

<<Proof $f\in\aut(G)\implies f$ is [[Automorphism of G]]>>=
proof
  assume A0: f in Aut G;
  then reconsider f as Endomorphism of G by AUTGROUP:def 1;
  f is bijective by A0,AUTGROUP:def 1;
  then f is Automorphism of G;
  hence thesis;
end;

@

\N{Proof backwards direction} The backwards direction is nearly
identical to the forwards direction proof.

<<Proof $f\in\aut(G)\impliedby f$ is [[Automorphism of G]]>>=
proof
  assume f is Automorphism of G;
  then reconsider f as Automorphism of G;
  f is bijective;
  then f in Aut G by AUTGROUP:def 1;
  hence thesis;
end;

@

\N{Inner automorphisms are inner automorphisms}
We can relate the notion of an [[inner Automorphism of G]] with elements
of [[InnAut G]] from [[AUTGROUP]]. The only peculiarity is that
[[AUTGROUP]] requires $G$ to be a \emph{strict} group.

<<Theorem: $f$ in [[InnAut G]] iff $f$ is [[inner Automorphism of G]]>>=
<<Lemma: Elements of [[InnAut G]] are automorphisms>>

theorem
  for G being strict Group
  for f being object
  holds (f in InnAut G) iff (f is inner Automorphism of G)
proof
  let G be strict Group;
  let f be object;
  thus (f in InnAut G) implies (f is inner Automorphism of G)
  <<Proof $f$ is in [[InnAut G]] $\implies$ ($f$ is inner automorphism)>>
  thus (f is inner Automorphism of G) implies (f in InnAut G)
  <<Proof ($f$ is inner automorphism) $\implies$ $f$ is in [[InnAut G]]>>
  thus thesis;
end;

@

\N{Proof in forwards direction} The proof amounts to unwinding
definitions, but the subtlety is in first reconsidering $f$ as an
Automorphism of $G$ thanks to our handy-dandy lemma.

<<Proof $f$ is in [[InnAut G]] $\implies$ ($f$ is inner automorphism)>>=
proof
  assume Z0: f in InnAut G;
  then f is Automorphism of G by LmInnAut;
  then reconsider f as Automorphism of G;
  f is Element of Funcs (the carrier of G, the carrier of G) by FUNCT_2:9;
  then consider a being Element of G such that
  A2: for x being Element of G holds f.x = x |^ a
  by Z0,AUTGROUP:def 4;
  f is inner Automorphism of G by Def5,A2;
  hence thesis;
end;

@

\N{Proof in backwards direction}
This is again unwinding the definitions. The same subtlety lurks here,
requiring us to reconsider $f$ as an inner automorphism of $G$.

<<Proof ($f$ is inner automorphism) $\implies$ $f$ is in [[InnAut G]]>>=
proof
  assume Z1: f is inner Automorphism of G;
  reconsider f as inner Automorphism of G by Z1;
  f is Element of Aut G by Z1,Th8;
  then consider a being Element of G such that
  B1: for x being Element of G holds f.x = x |^ a
  by Z1,Def5;
  f is Element of Funcs (the carrier of G, the carrier of G) by FUNCT_2:9;
  then f in InnAut G by B1,AUTGROUP:def 4;
  hence thesis;
end;

@

\M
It's relatively straightforward to show that if $f$ is an element of
[[InnAut G]], then $f$ is an [[Automorphism of G]]. We just unwind the
definitions.

<<Lemma: Elements of [[InnAut G]] are automorphisms>>=
LmInnAut:
  for G being strict Group
  for f being Element of InnAut G
  holds f is Automorphism of G
proof
  let G be strict Group;
  let f be Element of InnAut G;
  f is Element of Aut G by AUTGROUP:12;
  then f in Aut G;
  hence f is Automorphism of G by Th8;
end;

@

\subsection{Isomorphisms}

\M
We also want to prove results concerning group isomorphisms. This
requires a preliminary notion for a group $G_{2}$ being a
$G_{1}$-isomorphic group.

<<Group isomorphisms>>=
<<Define when a group is [[G-isomorphic]]>>
<<Register [[G-isomorphic]] for groups>>
<<Register [[bijective]] for [[Homomorphism]] of $G_{1}$, $G_{2}$>>
<<Define group [[Isomorphism]]>>

@


\M It's useful to introduce, not just a group $K$, but a $G$-isomorphic
group $K$.

<<Define when a group is [[G-isomorphic]]>>=
definition :: Def6
  let G1,G2 be Group;
  attr G2 is G1-isomorphic means :Def6:
  G1,G2 are_isomorphic;
end;

@

\M We also wanter to register this attribute (``being $G$-isomorphic'')
as a perfectly fine adjective for groups. This requires proving that,
for any group $G_{1}$ we have a $G_{1}$-isomorphic group.

<<Register [[G-isomorphic]] for groups>>=
registration
  let G1 be Group;
  cluster G1-isomorphic for Group;
  existence
  proof
    take G1;
    Id_G1 is bijective;
    thus thesis;
  end;
end;

@

\N{Registering [[bijective]] for [[Homomorphism]]}
We had to take a detour, because if you just gave me any two random
groups $G_{1}$ and $G_{2}$, there is zero reason to believe they are
isomorphic. Just consider any two finite groups of different size. And
group isomorphisms are only well-defined between isomorphic groups. Now
that we have a notion of isomorphic-groups, we can define a notion of
[[Isomorphism]]. We will also need to prove their existence, which we
place in a lemma.

<<Register [[bijective]] for [[Homomorphism]] of $G_{1}$, $G_{2}$>>=
<<Lemma: $G_{2}$ is $G_{1}$-isomorphic implies existence of isomorphism>>

registration
  let G1 be Group,
      G2 be G1-isomorphic Group;
  cluster bijective for Homomorphism of G1,G2;
  existence by Lm5;
end;

@

\N{Lemma: Isomorphic groups have an isomorphism between them}
Let $G_{1}$ be a group. For any $G_{1}$-isomorphic group $G_{2}$,
there exists at least one isomorphism $G_{1}\to G_{2}$. It's just a
straightforward matter of unwinding the definitions.

<<Lemma: $G_{2}$ is $G_{1}$-isomorphic implies existence of isomorphism>>=
Lm5:
  for G2 being G1-isomorphic Group
  holds (ex h being Homomorphism of G1,G2 st h is bijective)
proof
  let G2 be G1-isomorphic Group;
  G1,G2 are_isomorphic by Def6;
  then consider h being Homomorphism of G1,G2 such that
A1: h is bijective by GROUP_6:def 11;
  thus thesis by A1;
end;

@

\N{Definition} We can now define a notion of group [[Isomorphism]] in
Mizar. We can't do it ``willy-nilly'', of course: the notion of an
isomorphism only makes sense when it is from a group $G_{1}$ to a
$G_{1}$-isomorphic group. But given such a condition on $G_{2}$, we can
define an [[Isomorphism]] as just a bijective group morphism $G_{1}\to G_{2}$.

<<Define group [[Isomorphism]]>>=
definition :: Def7
  let G1 be Group,
      G2 be G1-isomorphic Group;
  mode Isomorphism of G1,G2 is bijective Homomorphism of G1,G2;
end;

@


\subsection{Pure Math}

\begin{theorem}[{Gorenstein~\cite[Th.1.5 of ch.2\S1]{gorenstein1980}}]
  If $H$ is a minimal normal subgroup of $G$ (i.e., $H\normalSubgroup G$
  and there is no nontrivial proper subgroup of $H$ which is normal in
  $G$),
  then \emph{either} $H$ is an elementary Abelian $p$-group (for some
  prime $p\in\NN$) \emph{or} $H$ is the direct product of isomorphic
  non-Abelian simple groups.
\end{theorem}

\begin{definition}[{Dummit and Foote~\cite[\S4,4]{dummit-foote}}]
A subgroup $H$ of $G$ is called \define{Characteristic} in $G$, usually
denoted $H~\mathrm{char}~G$, if every Automorphism of $G$ maps $H$ to
itself; i.e., $\sigma(H)=H$ for all $\sigma\in\aut(G)$.
\end{definition}

\begin{theorem}[{Gorenstein~\cite[Th.1.3 of ch.2\S1]{gorenstein1980}}]
Let $G$ be a group. If a normal subgroup $H\normalSubgroup G$ whose
order and index are coprime
\begin{equation*}
\gcd(|H|, [G:H])=1,
\end{equation*}
then $H$ is a characteristic subgroup of $G$.
\end{theorem}

\begin{definition}
Let $G$ be a group. The \define{Derived Subgroup} of $G$ is the subgroup
denoteed $G'$ or $[G,G]$ generated by commutators of elements of $G$, where
for generic subsets $X,Y\subset G$ we denote
\begin{equation}
  [X,Y] = \langle [x,y] : x\in X,y\in Y\rangle.
\end{equation}
We also use the notation $[X,Y,Z] = [\,{[X,Y]},Z]$
\end{definition}


\begin{theorem}[Hall's Three Subgroup Lemma]
  Let $H$, $K$, $L$ be subgroups of $G$.
  If $[H,K,L]=1$ and $[K,L,H]=1$, then $[L,H,K]=1$.
\end{theorem}
