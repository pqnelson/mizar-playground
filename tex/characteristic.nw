\documentclass{article}\usepackage{noweb}\pagestyle{noweb}\noweboptions{}\begin{document}\nwfilename{nw/characteristic.nw}\nwbegindocs{0}% -*- mode: poly-noweb; noweb-code-mode: mizar-mode; -*-% ===> this file was generated automatically by noweave --- better not edit it
\chapter{Characteristic Subgroups}

\N{Structure of an article}
We call a Mizar file/script an ``article''. While developing a Mizar
article, the main body is stored in a {\Tt{}TEXT/\nwendquote} subdirectory. As I
understand it, the casing of the directory matters (because there are
DOS computers which have case-sensitive file systems\dots or something).
Every Mizar article looks like:

\nwenddocs{}\nwbegincode{1}\moddef{TEXT/tmp.miz}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup

\LA{}Environment for \code{}tmp.miz\edoc{}\RA{}

\LA{}\code{}tmp.miz\edoc{} article body\RA{}

\nwendcode{}\nwbegindocs{2}\nwdocspar

\M
Each Mizar article has an associated ``vocabular file'' which lists the
\emph{new} terms introduced. It's stored in a {\Tt{}DICT/\nwendquote}
subdirectory. Terms are prefixed with the following:
\begin{itemize}
\item {\Tt{}R\nwendquote} for predicate (like {\Tt{}Rare{\_}isomorphic\nwendquote} for a new predicate {\Tt{}are{\_}isomorphic\nwendquote})
\item {\Tt{}O\nwendquote} for functor (e.g., {\Tt{}Oid\nwendquote} for {\Tt{}id\nwendquote})
\item {\Tt{}M\nwendquote} for mode (e.g., {\Tt{}MSubgroup\nwendquote} for {\Tt{}Subgroup\nwendquote})
\item {\Tt{}G\nwendquote} for structure (e.g., {\Tt{}GmultLoopStr{\_}0\nwendquote} for {\Tt{}multLoopStr{\_}0\nwendquote})
\item {\Tt{}U\nwendquote} for selectors (e.g., {\Tt{}Ucarrier\nwendquote} in {\Tt{}STRUCT{\_}0\nwendquote} gives us a
  way to write {\Tt{}the\ carrier\ of\ X\nwendquote})
\item {\Tt{}V\nwendquote} for attributes (so {\Tt{}Vcharacteristic\nwendquote} is a new attribute ``characteristic'')
\item {\Tt{}K\nwendquote} for left functor brackets (like \verb#[:# in {\Tt{}ZFMISC{\_}1\nwendquote})
\item {\Tt{}L\nwendquote} for right functor brackets (like the corresponding \verb#:]#
  in {\Tt{}ZFMISC{\_}1\nwendquote})
\end{itemize}

\M
For our immediate purposes, we want to prove theorems concerning
characteristic subgroups. We can start with checking if the vocabulary
word ``characteristic'' has been introduced by running on the command
line ``\verb#findvoc -w "characteristic"#'' to see if any article has
already introduced it. (None has, so far.) Since we want to describe
``characteristic Subgroups'' and ``Subgroup'' is a mode defined in
{\Tt{}GROUP{\_}2\nwendquote}, it seems reasonable to introduce a new adjective
[attribute] ``characteristic'' Thus we begin:

\nwenddocs{}\nwbegincode{3}\moddef{DICT/TMP.VOC}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
Vcharacteristic

\nwendcode{}\nwbegindocs{4}\nwdocspar

\input{tex/characteristic/environ}

\section{Article Body}

\M
The article body is where the magic happens.

\nwenddocs{}\nwbegincode{5}\moddef{\code{}tmp.miz\edoc{} article body}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
\LA{}Helper lemmas and registrations for \code{}tmp.miz\edoc{}\RA{}

\LA{}Inner and outer automorphisms\RA{}
\LA{}Group isomorphisms\RA{}
\LA{}Characteristic subgroup results\RA{}

\nwendcode{}\nwbegindocs{6}\nwdocspar

\input{tex/characteristic/preparatory}
\input{tex/characteristic/automorphism}
\input{tex/characteristic/isomorphism}
\input{tex/characteristic/results}


\nwenddocs{}\nwfilename{nw/characteristic/environ.nw}\nwbegindocs{0}\section{Environment}

\M
The header, or ``environment part'', tells Mizar what mathematics needs
to be imported from existing Mizar articles found in the MML.

\nwenddocs{}\nwbegincode{1}\moddef{Environment for \code{}tmp.miz\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
environ
 \LA{}\code{}tmp.miz\edoc{} vocabularies\RA{};
 \LA{}\code{}tmp.miz\edoc{} constructors\RA{};
 \LA{}\code{}tmp.miz\edoc{} notations\RA{};
 \LA{}\code{}tmp.miz\edoc{} registrations\RA{};
 \LA{}\code{}tmp.miz\edoc{} requirements\RA{};
 \LA{}\code{}tmp.miz\edoc{} definitions\RA{};
 \LA{}\code{}tmp.miz\edoc{} equalities\RA{};
 \LA{}\code{}tmp.miz\edoc{} expansions\RA{};
 \LA{}\code{}tmp.miz\edoc{} theorems\RA{};
 \LA{}\code{}tmp.miz\edoc{} schemes\RA{};
 \LA{}\code{}tmp.miz\edoc{} requirements\RA{};

\nwendcode{}\nwbegindocs{2}\nwdocspar

\subsection{Vocabularies, Notations, Constructors}

\N{Vocabularies}\label{par:characteristic:vocabularies}
The {\Tt{}vocabularies\nwendquote} refers to the identifiers defined. For example,
{\Tt{}Isomorphism\nwendquote} may be found in {\Tt{}RING{\_}3\nwendquote}. So even if I wanted to use
{\Tt{}Isomorphism\nwendquote} as a token, I need to add {\Tt{}RING{\_}3\nwendquote} to
the vocabularies list. Similarly, {\Tt{}MOD{\_}4\nwendquote} introduces the tokens
{\Tt{}Endomorphism\nwendquote} and {\Tt{}Automorphism\nwendquote}, which I want to use, so I add
them, too.

\nwenddocs{}\nwbegincode{3}\moddef{\code{}tmp.miz\edoc{} vocabularies}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
vocabularies RING_3, MOD_4, TMP,
  \LA{}Functions and subset tokens\RA{},
  \LA{}Group and subgroups tokens\RA{},
  \LA{}Group conjugation and normal subgroups tokens\RA{}

\nwendcode{}\nwbegindocs{4}\nwdocspar

\M
We need to recognize the tokens found in rudimentary set theory, so we
begin with importing the usual suspects.

\nwenddocs{}\nwbegincode{5}\moddef{Functions and subset tokens}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
MSSUBFAM, RELAT_1, TARSKI, FUNCT_1, ZFMISC_1, NUMBERS, WELLORD1,
SUBSET_1, XBOOLE_0

\nwendcode{}\nwbegindocs{6}\nwdocspar

\M
Characteristic subgroups requires recognizing tokens about\dots groups,
and subgroups.

\nwenddocs{}\nwbegincode{7}\moddef{Group and subgroups tokens}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
STRUCT_0, GROUP_1, GROUP_2, SUBSET_1, GROUP_4, GROUP_5,
MSSUBFAM, GROUP_6, BINOP_1, BINOP_2, ALGSTR_0, REALSET1,
AUTGROUP

\nwendcode{}\nwbegindocs{8}\nwdocspar

\M
{\Tt{}NEWTON\nwendquote} defines the token {\Tt{}|{\char94}\nwendquote}, used as infix operator {\Tt{}a\ |{\char94}\ b\nwendquote}
which is Mizar notation for $a^{b}$. Mizar follows group theorist
notation of writing $g^{h} = h^{-1}gh$ for conjugation. Also observe
that {\Tt{}normal\nwendquote} is introduced in {\Tt{}PRE{\_}TOPC\nwendquote}, so we need to include
that, as well.

\nwenddocs{}\nwbegincode{9}\moddef{Group conjugation and normal subgroups tokens}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
NEWTON, PRE_TOPC, GROUP_3

\nwendcode{}\nwbegindocs{10}\nwdocspar

\N{Constructors}
But the vocabularies just permits Mizar's parser to \emph{recognize}
terms. For the \emph{meaning} of these terms, we need to import the
\emph{constructors}. But if a constructor uses \emph{another article}'s
constructors, we need to also import that other article as well.

Often we just copy the articles imported for the notations section, but
in my experience it's often a strict subset of the notations. I'm lazy,
so I'll just copy the constructor imports:

\nwenddocs{}\nwbegincode{11}\moddef{\code{}tmp.miz\edoc{} constructors}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
constructors \LA{}set theoretic notation for \code{}tmp.miz\edoc{}\RA{},
  \LA{}group theoretic notation for \code{}tmp.miz\edoc{}\RA{}

\nwendcode{}\nwbegindocs{12}\nwdocspar

\N{Notations}
Now we need to import the functor patterns to ``couple'' the definitions
and notations. Usually this is just the constructor list.

\nwenddocs{}\nwbegincode{13}\moddef{\code{}tmp.miz\edoc{} notations}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
notations \LA{}set theoretic notation for \code{}tmp.miz\edoc{}\RA{},
  \LA{}group theoretic notation for \code{}tmp.miz\edoc{}\RA{}

\nwendcode{}\nwbegindocs{14}\nwdocspar

\M The basics of Tarski--Grothendieck set theory may be found in
{\Tt{}TARSKI\nwendquote}. Partial functions are introduced in {\Tt{}PARTFUN1\nwendquote}. Binary
operations applied to functions {\Tt{}FUNCOP{\_}1\nwendquote} will be necessary later
on. And fancy functions from sets to sets, like {\Tt{}Permutation\nwendquote}, is
defined in {\Tt{}FUNCT{\_}2\nwendquote}. There are few random odds and ends, like
{\Tt{}NUMBERS\nwendquote} for subsets of complex numbers

\nwenddocs{}\nwbegincode{15}\moddef{set theoretic notation for \code{}tmp.miz\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, RELAT_1, FUNCT_1,
RELSET_1, PARTFUN1, FUNCT_2, FUNCOP_1, NUMBERS

\nwendcode{}\nwbegindocs{16}\nwdocspar

\M
The group theoretic notions are a grab bag of binary operators
({\Tt{}BINOP{\_}1\nwendquote} and {\Tt{}BINOP{\_}2\nwendquote}), prerequisites for algebraic structures
({\Tt{}STRUCT{\_}0\nwendquote} and {\Tt{}ALGSTR{\_}0\nwendquote}), primordial group theoretic articles
({\Tt{}REALSET1\nwendquote}), and the relevant group theory articles.

\nwenddocs{}\nwbegincode{17}\moddef{group theoretic notation for \code{}tmp.miz\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
BINOP_1, BINOP_2, STRUCT_0, ALGSTR_0, REALSET1, GROUP_1, GROUP_2,
GROUP_3, GROUP_4, GROUP_5, GROUP_6, GRSOLV_1, AUTGROUP

\nwendcode{}\nwbegindocs{18}\nwdocspar

\subsection{Registrations, Definitions, Theorems, Schemes}

\N{Registrations}
We often cluster adjectives together with registrations, or have one
adjective imply another automatically (like how a characteristic
Subgroup is always normal). We import these using the registrations
portion of the environment. For our purposes, we may need basic facts
about relations ({\Tt{}RELAT{\_}1\nwendquote}), functions and partial functions ({\Tt{}FUNCT{\_}1\nwendquote},
{\Tt{}PARTFUN1\nwendquote}, {\Tt{}FUNCT{\_}2\nwendquote}), relations between sets ({\Tt{}RELSET{\_}1\nwendquote}).

\nwenddocs{}\nwbegincode{19}\moddef{\code{}tmp.miz\edoc{} registrations}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
registrations \LA{}Register set theoretic clusters\RA{},
  \LA{}Register group theoretic clusters\RA{}

\nwendcode{}\nwbegindocs{20}\nwdocspar

\M
The clusters we want to use from set theory are defined in the ``same''
scattering of places.

\nwenddocs{}\nwbegincode{21}\moddef{Register set theoretic clusters}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
XBOOLE_0, RELAT_1, FUNCT_1, PARTFUN1, RELSET_1, FUNCT_2

\nwendcode{}\nwbegindocs{22}\nwdocspar

\M
We also need to register adjectives germane to group theory.

\nwenddocs{}\nwbegincode{23}\moddef{Register group theoretic clusters}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
STRUCT_0, GROUP_1, GROUP_2, GROUP_3, GROUP_6

\nwendcode{}\nwbegindocs{24}\nwdocspar

\N{Definitions} When using a definition $f := M$, we need to cite it in
a proof. Specifically, automatically unfolding predicates from specific
articles. If we want this to be automated, we can cite the article in
the {\Tt{}definitions\nwendquote} portion of the {\Tt{}environ\nwendquote}.

\nwenddocs{}\nwbegincode{25}\moddef{\code{}tmp.miz\edoc{} definitions}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
definitions \LA{}Include set theoretic definitions\RA{},
  \LA{}Include group theoretic definitions\RA{}

\nwendcode{}\nwbegindocs{26}\nwdocspar

\begin{remark}
  Kornilowicz~\cite[see \S{5.1}]{kornilowicz2015definitional} that:
  ``Environment directive {\Tt{}definitions\nwendquote} is used for importing two different kinds of information from the database: definitional expansions used by REASONER and expansions of terms defined by equals used by EQUALIZER.''
\end{remark}

\M Arguably, we want to be using basic predicates concerning subsets
({\Tt{}SUBSET{\_}1\nwendquote}), functions ({\Tt{}FUNCT{\_}1\nwendquote} and {\Tt{}FUNCT{\_}2\nwendquote}), and set theory
({\Tt{}TARSKI\nwendquote}), so let's just add them.

\nwenddocs{}\nwbegincode{27}\moddef{Include set theoretic definitions}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
SUBSET_1, FUNCT_1, TARSKI, FUNCT_2

\nwendcode{}\nwbegindocs{28}\nwdocspar

\M
But we also want to use facts concerning normal subgroups ({\Tt{}GROUP{\_}3\nwendquote})
and the automorphism group $\aut(G)$ ({\Tt{}AUTGROUP\nwendquote}).

\nwenddocs{}\nwbegincode{29}\moddef{Include group theoretic definitions}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
GROUP_3, AUTGROUP

\nwendcode{}\nwbegindocs{30}\nwdocspar

\N{Theorems}
The {\Tt{}vocabularies\nwendquote} allows Mizar's scanner and parser to
\emph{recognize} terms. The {\Tt{}constructors\nwendquote} and {\Tt{}notations\nwendquote} allows us
to use the patterns and constructors for terms. But if we want to cite
theorems and definitions in proofs (i.e., if we want to use the
\emph{results} of previous articles), then we need to add those cited
articles to the {\Tt{}theorems\nwendquote} environment.

\nwenddocs{}\nwbegincode{31}\moddef{\code{}tmp.miz\edoc{} theorems}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
theorems
  \LA{}Import set-theoretic theorems\RA{},
  \LA{}Import group-theoretic theorems\RA{}

\nwendcode{}\nwbegindocs{32}\nwdocspar

\M We have the usual cast of set theoretic characters.
\nwenddocs{}\nwbegincode{33}\moddef{Import set-theoretic theorems}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
TARSKI_0, TARSKI, SUBSET_1, RELSET_1, FUNCT_1, FUNCT_2, ZFMISC_1,
XBOOLE_0, RELAT_1

\nwendcode{}\nwbegindocs{34}\nwdocspar

\M Again, we import the usual group theoretic theorems.
\nwenddocs{}\nwbegincode{35}\moddef{Import group-theoretic theorems}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
GROUP_1, GROUP_2, GROUP_3, GROUP_5, GROUP_6, REALSET1, STRUCT_0,
GRSOLV_1, AUTGROUP

\nwendcode{}\nwbegindocs{36}\nwdocspar

\N{Schemes}
If we want to cite and use a scheme defined elsewhere, then we need the
article's name cited in the {\Tt{}schemes\nwendquote} portion of the environment.

\nwenddocs{}\nwbegincode{37}\moddef{\code{}tmp.miz\edoc{} schemes}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
schemes BINOP_1, FUNCT_2

\nwendcode{}\nwbegindocs{38}\nwdocspar

\subsection{\dots and the rest}

\N{Equalities}
This seems to be introduced around 2015, the only documentation I could
find was in Kornilowics~\cite{kornilowicz2015definitional}.
Expansions of terms defined by {\Tt{}equals\nwendquote} are imported by a new
{\Tt{}environ\nwendquote} directive {\Tt{}equalities\nwendquote}.

\nwenddocs{}\nwbegincode{39}\moddef{\code{}tmp.miz\edoc{} equalities}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
equalities BINOP_1, REALSET1, GROUP_2, GROUP_3, ALGSTR_0

\nwendcode{}\nwbegindocs{40}\nwdocspar

\N{Expansions}
Import expansions of predicates and adjectives from the specified
articles.

\nwenddocs{}\nwbegincode{41}\moddef{\code{}tmp.miz\edoc{} expansions}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
expansions BINOP_1, FUNCT_2

\nwendcode{}\nwbegindocs{42}\nwdocspar

\N{Requirements} Within mathematics, there's a lot of implicit
knowledge. Mizar automates some of that with {\Tt{}requirements\nwendquote}
inclusions. For example, if we want to show {\Tt{}x\ in\ X\nwendquote}
(Mizar for the primitive binary predicate $x\in X$) implies
the typing relation {\Tt{}x\ is\ Element\ of\ X\nwendquote}, well, that's ``obvious'' to
us humans, and we can make it obvious to Mizar as well using the proper
requirements.

\begin{remark}
As I understand it (from Wiedijk's excellent ``Writing a Mizar Article
in 9 easy steps''), the only possibilities for the {\Tt{}requirements\nwendquote} are:
{\Tt{}BOOLE\nwendquote}, {\Tt{}SUBSET\nwendquote}, {\Tt{}NUMERALS\nwendquote}, {\Tt{}ARITHM\nwendquote}, {\Tt{}REAL\nwendquote}.
\end{remark}

\nwenddocs{}\nwbegincode{43}\moddef{\code{}tmp.miz\edoc{} requirements}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
requirements BOOLE, SUBSET

\nwendcode{}\nwbegindocs{44}\nwdocspar

\nwenddocs{}\nwfilename{nw/characteristic/preparatory.nw}\nwbegindocs{0}\subsection{Preparatory results}

\M
We begin by registering the identity function as being surjective and
bijective. This should have been done in {\Tt{}FUNCT{\_}2\nwendquote}, but hey, what can
you do?

\nwenddocs{}\nwbegincode{1}\moddef{Helper lemmas and registrations for \code{}tmp.miz\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
begin :: preparatory work
reserve X for set;

registration
  let X;
  cluster id X -> onto;
  coherence;
end;

registration
  let X;
  cluster id X -> bijective;
  coherence;
end;

\nwendcode{}\nwbegindocs{2}\nwdocspar

\M
We also need to prove that, if we have a subgroup $H\subgroup G$ and
$h\in G$ is an arbitrary element of the underlying set, then $h\in H$
implies the typing judgement ``{\Tt{}h\ is\ Element\ of\ H\nwendquote}''.

\nwenddocs{}\nwbegincode{3}\moddef{Helper lemmas and registrations for \code{}tmp.miz\edoc{}}\plusendmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
LmSubgroupElt:
for G being Group
for H being Subgroup of G
for h being Element of G st h in H holds h is Element of H
proof
  let G be Group,
      H be Subgroup of G,
      h be Element of G;
  assume h in H;
  then h is Element of the carrier of H by STRUCT_0:def 5;
  then h is Element of H;
  hence thesis;
end;

\nwendcode{}\nwbegindocs{4}\nwdocspar

\N{Restriction of Group Morphisms to Subgroups}
Mizar proves that, if $f\colon X\to Y$ is a set theoretic function and
$A\subset X$ is an arbitrary subset, then $\forall a\in X$ we have
$a\in A\implies f|_{A}(a)=f(a)$. But this doesn't generalize to
morphisms, sadly, because a group is like a chocolate-covered set.

So we just prove for any pair of groups $G_{1}$ and $G_{2}$,
for any subgroup $H\subgroup G_{1}$,
for any group morphism $f\colon G_{1}\to G_{2}$, and for arbitrary $h\in G_{1}$,
we have $h\in H\implies f|_{H}(h) = f(h)$. The reasoning is that we can
always look at the set-theoretic function $U(f)$ underlying $f$, then
piggie-back off earlier results establishing the desired claim
(Theorem~49 of {\Tt{}FUNCT{\_}1\nwendquote}, to be precise).

\nwenddocs{}\nwbegincode{5}\moddef{Helper lemmas and registrations for \code{}tmp.miz\edoc{}}\plusendmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
Lm3: for G1,G2 being Group
for H being Subgroup of G1
for f being Homomorphism of G1,G2
for h being Element of G1
st h in H
holds (f|H).h = f.h
proof
  let G1,G2 be Group;
  let H be Subgroup of G1;
  let f be Homomorphism of G1,G2;
  let h be Element of G1;
  assume h in H;
  then h is Element of H by LmSubgroupElt;
  then (f|(the carrier of H)).h = f.h by FUNCT_1:49;
  then (f|H).h = f.h by GRSOLV_1:def 2;
  hence thesis;
end;

\nwendcode{}\nwbegindocs{6}\nwdocspar

\M
Let $H_{1}\subgroup G$ and $H_{2}\subgroup G$.
If $H_{1}\subgroup H_{2}$ and $H_{2}\subgroup H_{1}$, then
$H_{1}=H_{2}$. Pretty simple, right? \dots I'm not sure I'll need this,
but here it is if I do.

\nwenddocs{}\nwbegincode{7}\moddef{Sandwich Subgroup Equality Theorem}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
LmSandwich: for H1 being strict Subgroup of G
for H2 being strict Subgroup of G
st (H1 is Subgroup of H2) & (H2 is Subgroup of H1)
holds H1 = H2
proof
  let H1 be strict Subgroup of G;
  let H2 be strict Subgroup of G;
  assume H1 is Subgroup of H2 & H2 is Subgroup of H1;
  then the multMagma of H1 = the multMagma of H2 by GROUP_2:55;
  hence thesis;
end;

\nwendcode{}\nwbegindocs{8}\nwdocspar

\begin{remark}[On ``strict'' mathematical gadgets]\index{strict@\texttt{strict}|textbf}
Mizar has a notion of a ``{\Tt{}strict\nwendquote}'' attribute. What does it mean?
Well, sometimes a mathematical gadget is ``composite''; like a vector
space over a field is an Abelian group with vector addition, but it also
has other stuff (like scalar multiplication). This ``other stuff''
prevents it from being a ``bald-faced Abelian group''. Just as black
holes have no hair, strict groups have no hair: it's just a
{\Tt{}multMagma\nwendquote} satisfying the group properties (in Mizar, at least).
\end{remark}

\M Let $H\subgroup G$ be such that $\forall a\in G, a^{-1}Ha=H$.
Then $H\normalSubgroup G$ is a normal subgroup. The current theorems in
{\Tt{}GROUP{\_}3\nwendquote} require $H$ to be a \emph{strict} subgroup, but this
strictness condition is not necessary.

\nwenddocs{}\nwbegincode{9}\moddef{Subgroups invariant under conjugation are normal}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
LmNormalSubgroup:
for G being Group
for H being Subgroup of G
st (for a being Element of G holds H |^ a = H)
holds H is normal Subgroup of G
proof
  let G be Group;
  let H be Subgroup of G;
  assume A0: for a being Element of G holds H |^ a = H;
  then for a being Element of G holds the carrier of H |^ a = the carrier of H;
  then for a being Element of G holds the multMagma of H = H |^ a by GROUP_2:59;
  hence H is normal Subgroup of G by GROUP_3:def 13;
end;

\nwendcode{}\nwbegindocs{10}\nwdocspar
\nwenddocs{}\nwfilename{nw/characteristic/automorphism.nw}\nwbegindocs{0}\subsection{Automorphisms}

\M Now, we have a section for defining inner and outer group
automorphisms. A \emph{group automorphism} is just a bijective endomorphism on
a group, and an \emph{endomorphism} is a group morphism whose codomain
is its domain.

Remember (\S\ref{par:characteristic:vocabularies}), although we are
defining new terms {\Tt{}Endomorphism\nwendquote} and {\Tt{}Automorphism\nwendquote}, we do not need
to add them to our {\Tt{}DICT/TMP.VOC\nwendquote} file. Why not? Because the tokens
are already included from {\Tt{}MOD{\_}4\nwendquote}.

\nwenddocs{}\nwbegincode{1}\moddef{Inner and outer automorphisms}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
begin

\LA{}Reserve symbols for inner and outer automorphisms\RA{}
\LA{}Define \code{}Endomorphism\edoc{}\RA{}
\LA{}Register \code{}bijective\edoc{} for \code{}Endoomorphism\edoc{}\RA{}
\LA{}Define \code{}Automorphism\edoc{}\RA{}
\LA{}Endomorphisms preserve the trivial subgroup\RA{}
\LA{}Automorphisms map trivial subgroups to themselves\RA{}
\LA{}Define $\Id_{G}$\RA{}
\LA{}\code{}Id{\_}G\edoc{} is the same as \code{}id\ the\ carrier\ of\ G\edoc{}\RA{}
\LA{}Register \code{}Id{\_}G\edoc{} is bijective\RA{}
\LA{}Define \code{}inner\edoc{} for Automorphism\RA{}
\LA{}\code{}Id{\_}G\edoc{} is effectively inner\RA{}
\LA{}Register \code{}inner\edoc{} for \code{}Automorphism\edoc{}\RA{}
\LA{}Relate \code{}Automorphism\ of\ G\edoc{} to elements of \code{}Aut\ G\edoc{}\RA{}
\LA{}Theorem: $f$ in \code{}InnAut\ G\edoc{} iff $f$ is \code{}inner\ Automorphism\ of\ G\edoc{}\RA{}
\LA{}Theorem: inner automorphism acting on subgroup is conjugate of argument\RA{}
\LA{}Theorem: conjugation of given element is an inner automorphism\RA{}

\nwendcode{}\nwbegindocs{2}\nwdocspar

\M Note we just used the symbol {\Tt{}G\nwendquote} for a generic group, so we add to
the reserved symbols this association.

\nwenddocs{}\nwbegincode{3}\moddef{Reserve symbols for inner and outer automorphisms}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
reserve G for Group;

\nwendcode{}\nwbegindocs{4}\nwdocspar

\M A group endomorphism of $G$ is just a homomorphism $f\colon G\to G$.

\nwenddocs{}\nwbegincode{5}\moddef{Define \code{}Endomorphism\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
definition :: Def1
  let G;
  mode Endomorphism of G is Homomorphism of G,G;
end;

\nwendcode{}\nwbegindocs{6}\nwdocspar

\M\label{par:characteristic:register-bijective-for-endomorphism}
We begin by registering the attribute {\Tt{}bijective\nwendquote} for group
endomorphisms. This will effectively create a subtype of
{\Tt{}Endomorphism\ of\ G\nwendquote}, the aptly named {\Tt{}bijective\ Endomorphism\ of\ G\nwendquote}.
Most of our work has been done in article {\Tt{}GROUP{\_}6\nwendquote} by
Theorem~38 (which effectively states the function on the underlying set
{\Tt{}id\ (the\ carrier\ of\ G)\nwendquote} is a multiplicative function and so nearly a
group morphism that we can reconsider it as an {\Tt{}Endomorphism\nwendquote}), and
the fact that {\Tt{}id\ X\nwendquote} is bijective.

\nwenddocs{}\nwbegincode{7}\moddef{Register \code{}bijective\edoc{} for \code{}Endoomorphism\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
registration
  let G;
  cluster bijective for Homomorphism of G,G;
  existence
  proof
    reconsider i = id the carrier of G as Homomorphism of G,G by GROUP_6:38;
    i is bijective;
    hence thesis;
  end;
end;

\nwendcode{}\nwbegindocs{8}\nwdocspar

\N{Definition (Automorphism)}
Now we have an {\Tt{}Automorphism\ of\ G\nwendquote} be just a bijective endomorphism.

\nwenddocs{}\nwbegincode{9}\moddef{Define \code{}Automorphism\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
definition :: Def2
  let G;
  mode Automorphism of G is bijective Endomorphism of G;
end;

\nwendcode{}\nwbegindocs{10}\nwdocspar

\M For any group $G$ and endomorphism $f\in\End(G)$, we have the trivial
subgroup $\trivialSubgroup\subgroup G$ be preserved under $f$; i.e.,
$f(\trivialSubgroup)=\trivialSubgroup$.

\nwenddocs{}\nwbegincode{11}\moddef{Endomorphisms preserve the trivial subgroup}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
theorem Th1:
  Image (f|(1).G) = (1).G
proof
  Image(f|(1).G) = f .: ((1).G) by GRSOLV_1:def 3
  .= (1).G by GRSOLV_1:11;
  hence thesis;
end;

\nwendcode{}\nwbegindocs{12}\nwdocspar

\M Now we need to tell Mizar that $f$ is an endomorphism of $G$.

\nwenddocs{}\nwbegincode{13}\moddef{Reserve symbols for inner and outer automorphisms}\plusendmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
reserve f for Endomorphism of G;

\nwendcode{}\nwbegindocs{14}\nwdocspar

\M If $\phi$ is an automorphism of a group $G$, then
the image of the trivial subgroup under $\phi$ is a subgroup of itself
$\phi(\trivialSubgroup)\subgroup\trivialSubgroup$. We have, from
Theorem~{\Tt{}Th1\nwendquote}, that $\phi(\trivialSubgroup)=\trivialSubgroup$ since
$\phi$ (being an automorphism) is also an endomorphism. And {\Tt{}GROUP{\_}2\nwendquote}
proves that $G$ is a subgroup of itself in Theorem~{\Tt{}Th54\nwendquote}.

\nwenddocs{}\nwbegincode{15}\moddef{Automorphisms map trivial subgroups to themselves}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
:: In particular, the trivial proper subgroup (1).G of G is invariant
:: under inner automorphisms, and thus is a characteristic subgroup.
theorem Th2:
  for phi being Automorphism of G
  holds Image(phi|(1).G) is Subgroup of (1).G
proof
  let phi be Automorphism of G;
  (1).G is Subgroup of (1).G by GROUP_2:54;
  hence Image(phi|(1).G) is Subgroup of (1).G by Th1;
end;

\nwendcode{}\nwbegindocs{16}\nwdocspar

\N{Identity Group Endomorphism}
I found it tedious to write {\Tt{}id\ (the\ carrier\ of\ G)\nwendquote} over and over
again, so I wrote a shortcut {\Tt{}Id{\_}G\nwendquote} for $\Id_{G}$.

\nwenddocs{}\nwbegincode{17}\moddef{Define $\Id_{G}$}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
definition :: Def3
  let G;
  func Id_G -> Endomorphism of G means
  :Def3:
  for x being Element of G holds it.x=x;
  existence
  \LA{}Proof that $\Id_{G}$ exists\RA{}
  uniqueness
  \LA{}Proof $\Id_{G}$ is unique\RA{}
end;

\nwendcode{}\nwbegindocs{18}\nwdocspar

\M We need to add {\Tt{}Id{\_}\nwendquote} to our vocabulary.

\nwenddocs{}\nwbegincode{19}\moddef{DICT/TMP.VOC}\plusendmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
OId_

\nwendcode{}\nwbegindocs{20}\nwdocspar

\N{Proof ($\Id_{G}$ exists)}
Similar to the proof (\S\ref{par:characteristic:register-bijective-for-endomorphism})
that there exists a bijective endomorphism, the proof that $\Id_{G}$
exists amounts to reconsidering {\Tt{}id\nwendquote} as an endomorphism. Earlier work
in {\Tt{}FUNCT{\_}1\nwendquote} proved (in Theorem~17) the identity function satisfies
$\forall x\in X, \id_{X}(x)=x$.

\nwenddocs{}\nwbegincode{21}\moddef{Proof that $\Id_{G}$ exists}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
proof
  reconsider i = id (the carrier of G) as Homomorphism of G,G by GROUP_6:38;
  i.x = x by FUNCT_1:17;
  hence thesis;
end;

\nwendcode{}\nwbegindocs{22}\nwdocspar

\N{Proof (Uniqueness of $\Id_{G}$)}
The usual strategy is to consider two arbitrary endomorphisms
$\Id^{(1)}_{G}$ and $\Id^{(2)}_{G}$ satisfying the definition of
{\Tt{}Id{\_}\nwendquote}, then prove $\Id^{(1)}_{G} = \Id^{(2)}_{G}$.

If we wanted to be completely pedantic, we could cite Theorem~12 from
{\Tt{}FUNCT{\_}2\nwendquote} which states for any functions of sets
$f_{1}$, $f_{2}\colon X\to Y$ we have $\forall x\in X, f_{1}(x)=f_{2}(x)$
implies $f_{1}=f_{2}$.

\nwenddocs{}\nwbegincode{23}\moddef{Proof $\Id_{G}$ is unique}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
proof
  let Id1, Id2 be Endomorphism of G such that
  A1: for x being Element of G holds Id1.x=x and
  A2: for x being Element of G holds Id2.x=x;
  let x be Element of G;
  thus Id1.x = x by A1
            .= Id2.x by A2;
  thus thesis;
end;

\nwendcode{}\nwbegindocs{24}\nwdocspar

\M\label{thm:characteristic:identity-endomorphism-is-identity-function}
We should now have some sanity check that {\Tt{}Id{\_}G\nwendquote} really is
the identity group morphism $\Id_{G}$ that \emph{we} think it is.

\nwenddocs{}\nwbegincode{25}\moddef{\code{}Id{\_}G\edoc{} is the same as \code{}id\ the\ carrier\ of\ G\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
theorem Th3:
  Id_G = id (the carrier of G)
proof
  let x be Element of G;
  thus A4: (Id_G).x = x by Def3
                   .= (id (the carrier of G)).x;
  thus thesis;
end;

\nwendcode{}\nwbegindocs{26}\nwdocspar

\M
Now we should automatically associate $\Id_{G}$ is bijective. This
requires proving a couple of helper lemmas establishing injectivity and
surjectivity.

\nwenddocs{}\nwbegincode{27}\moddef{Register \code{}Id{\_}G\edoc{} is bijective}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
\LA{}\code{}Id{\_}G\edoc{} is injective\RA{}
\LA{}\code{}Id{\_}G\edoc{} is surjective\RA{}

registration let G;
  cluster Id_G -> bijective;
  coherence by Lm1,Lm2;
end;

\nwendcode{}\nwbegindocs{28}\nwdocspar

\N{Identity is injective}
The proof is straightforward since we've established (\S\ref{thm:characteristic:identity-endomorphism-is-identity-function}) the group
endomorphism $\Id_{G}$ coincides with the set-theoretic function $\id_{U(G)}$
on the underlying set $U(G)$ of the group $G$.

\nwenddocs{}\nwbegincode{29}\moddef{\code{}Id{\_}G\edoc{} is injective}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
Lm1: Id_G is one-to-one
proof
  id (the carrier of G) is one-to-one;
  hence thesis by Th3;
end;

\nwendcode{}\nwbegindocs{30}\nwdocspar

\N{Identity is surjective}
As with establishing injectivity, it's straightforward.

\nwenddocs{}\nwbegincode{31}\moddef{\code{}Id{\_}G\edoc{} is surjective}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
Lm2: Id_G is onto
proof
  id (the carrier of G) is onto;
  hence thesis by Th3;
end;

\nwendcode{}\nwbegindocs{32}\nwdocspar

\subsubsection{Inner Automorphisms}

\N{Definition: Inner Automorphism}
We call a group automorphism $f\in\Aut(G)$ \define{inner} if there is a
group element $g\in G$ such that for all $x\in G$ we have $f(x) = x^{g} = g^{-1}xg$.
That is, $f$ is just conjugation by a fixed group element.

\nwenddocs{}\nwbegincode{33}\moddef{Define \code{}inner\edoc{} for Automorphism}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
definition :: Def5
  let G;
  let IT be Automorphism of G;
  attr IT is inner means
  :Def5:
  ex a being Element of G st
  for x being Element of G holds IT.x = x |^ a;
end;
\LA{}Outer as antonym of inner\RA{}

\nwendcode{}\nwbegindocs{34}\nwdocspar

\M We also recall that an automorphism is called \define{Outer} if it is
not inner. Mizar let's us do this with the {\Tt{}antonym\nwendquote} construct within
a {\Tt{}notation\nwendquote} block.

\nwenddocs{}\nwbegincode{35}\moddef{Outer as antonym of inner}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
notation
  let G be Group, f be Automorphism of G;
  antonym f is outer for f is inner;
end;

\nwendcode{}\nwbegindocs{36}\nwdocspar

\N{Update our vocabular file}
Before rushing off to prove properties concerning inner and outer
automorphisms, we should add the attributes to our vocabulary file.


\nwenddocs{}\nwbegincode{37}\moddef{DICT/TMP.VOC}\plusendmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
Vinner
Vouter

\nwendcode{}\nwbegindocs{38}\nwdocspar

\N{Theorem: $\Id_{G}$ is effectively inner}\label{thm:characteristic:id-inner}
We will be registering ``inner'' as an attribute for ``Automorphism
of $G$''. This will require proving that there exists an inner
Automorphism of $G$. I've found the trivial examples are often best for
establishing the existence of such things, so we will prove {\Tt{}Id\ G\nwendquote} is
an inner Automorphism. This uses the fact, if $e\in G$ is the identity
element, then for any $g\in G$ we have conjugation $g^{e} = e^{-1}ge=g$
(proven in Theorem~19 of {\Tt{}GROUP{\_}3\nwendquote}).

\nwenddocs{}\nwbegincode{39}\moddef{\code{}Id{\_}G\edoc{} is effectively inner}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
theorem Th5:
  for x being Element of G holds (Id_G).x = x |^ 1_G
proof
  let x;
  (Id_G).x = x by Def3
          .= x |^ 1_G by GROUP_3:19;
  hence thesis;
end;

\nwendcode{}\nwbegindocs{40}\nwdocspar

\M Now registering {\Tt{}inner\nwendquote} for {\Tt{}Automorphism\nwendquote}.

\nwenddocs{}\nwbegincode{41}\moddef{Register \code{}inner\edoc{} for \code{}Automorphism\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
registration
  let G;
  cluster inner for Automorphism of G;
  existence
  \LA{}Proof of existence of an inner Automorphism\RA{}
end;

\nwendcode{}\nwbegindocs{42}\nwdocspar

\N{Proof} The proof is a two punch knock-out. We take {\Tt{}Id{\_}G\nwendquote} to be the
morphism, {\Tt{}1{\_}g\nwendquote} the group's identity element to be the element
{\Tt{}Id{\_}G\nwendquote} conjugates by, then from earlier (\S\ref{thm:characteristic:id-inner})
we have {\Tt{}Id{\_}G\nwendquote} be inner.

\nwenddocs{}\nwbegincode{43}\moddef{Proof of existence of an inner Automorphism}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
proof
  take Id_G;
  take 1_G;
  thus thesis by Th5;
end;

\nwendcode{}\nwbegindocs{44}\nwdocspar

\N{Theorem ($f\in\aut(G)\iff f$ is {\Tt{}Automorphism\ of\ G\nwendquote})}
Mizar has {\Tt{}AUTGROUP\nwendquote}, an article which defines {\Tt{}Aut\ G\nwendquote} the
collection of functions on the underlying set $U(G)$ of a group $G$. We
can prove that $f\in\aut(G)$ if and only if $f$ is {\Tt{}Automorphism\ of\ G\nwendquote}.

\nwenddocs{}\nwbegincode{45}\moddef{Relate \code{}Automorphism\ of\ G\edoc{} to elements of \code{}Aut\ G\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
theorem Th8:
  for G being strict Group, f being object
  holds (f in Aut G) iff (f is Automorphism of G)
proof
  let G be strict Group;
  let f be object;
  thus f in Aut G implies f is Automorphism of G
  \LA{}Proof $f\in\aut(G)\implies f$ is \code{}Automorphism\ of\ G\edoc{}\RA{}
  thus f is Automorphism of G implies f in Aut G
  \LA{}Proof $f\in\aut(G)\impliedby f$ is \code{}Automorphism\ of\ G\edoc{}\RA{}
  thus thesis;
end;

\nwendcode{}\nwbegindocs{46}\nwdocspar

\N{Proof forwards direction} The forward direction is
straightforward. The only subtlety is, since we didn't assume anything
about $f$, we should establish it's an endomorphism of $G$ along the way,

\nwenddocs{}\nwbegincode{47}\moddef{Proof $f\in\aut(G)\implies f$ is \code{}Automorphism\ of\ G\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
proof
  assume A0: f in Aut G;
  then reconsider f as Endomorphism of G by AUTGROUP:def 1;
  f is bijective by A0,AUTGROUP:def 1;
  then f is Automorphism of G;
  hence thesis;
end;

\nwendcode{}\nwbegindocs{48}\nwdocspar

\N{Proof backwards direction} The backwards direction is nearly
identical to the forwards direction proof.

\nwenddocs{}\nwbegincode{49}\moddef{Proof $f\in\aut(G)\impliedby f$ is \code{}Automorphism\ of\ G\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
proof
  assume f is Automorphism of G;
  then reconsider f as Automorphism of G;
  f is bijective;
  then f in Aut G by AUTGROUP:def 1;
  hence thesis;
end;

\nwendcode{}\nwbegindocs{50}\nwdocspar

\N{Inner automorphisms are inner automorphisms}
We can relate the notion of an {\Tt{}inner\ Automorphism\ of\ G\nwendquote} with elements
of {\Tt{}InnAut\ G\nwendquote} from {\Tt{}AUTGROUP\nwendquote}. The only peculiarity is that
{\Tt{}AUTGROUP\nwendquote} requires $G$ to be a \emph{strict} group.

\nwenddocs{}\nwbegincode{51}\moddef{Theorem: $f$ in \code{}InnAut\ G\edoc{} iff $f$ is \code{}inner\ Automorphism\ of\ G\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
\LA{}Lemma: Elements of \code{}InnAut\ G\edoc{} are automorphisms\RA{}

theorem Th9:
  for G being strict Group
  for f being object
  holds (f in InnAut G) iff (f is inner Automorphism of G)
proof
  let G be strict Group;
  let f be object;
  thus (f in InnAut G) implies (f is inner Automorphism of G)
  \LA{}Proof $f$ is in \code{}InnAut\ G\edoc{} $\implies$ ($f$ is inner automorphism)\RA{}
  thus (f is inner Automorphism of G) implies (f in InnAut G)
  \LA{}Proof ($f$ is inner automorphism) $\implies$ $f$ is in \code{}InnAut\ G\edoc{}\RA{}
  thus thesis;
end;

\nwendcode{}\nwbegindocs{52}\nwdocspar

\N{Proof in forwards direction} The proof amounts to unwinding
definitions, but the subtlety is in first reconsidering $f$ as an
Automorphism of $G$ thanks to our handy-dandy lemma.

\nwenddocs{}\nwbegincode{53}\moddef{Proof $f$ is in \code{}InnAut\ G\edoc{} $\implies$ ($f$ is inner automorphism)}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
proof
  assume Z0: f in InnAut G;
  then f is Automorphism of G by LmInnAut;
  then reconsider f as Automorphism of G;
  f is Element of Funcs (the carrier of G, the carrier of G) by FUNCT_2:9;
  then consider a being Element of G such that
  A2: for x being Element of G holds f.x = x |^ a
  by Z0,AUTGROUP:def 4;
  f is inner Automorphism of G by Def5,A2;
  hence thesis;
end;

\nwendcode{}\nwbegindocs{54}\nwdocspar

\N{Proof in backwards direction}
This is again unwinding the definitions. The same subtlety lurks here,
requiring us to reconsider $f$ as an inner automorphism of $G$.

\nwenddocs{}\nwbegincode{55}\moddef{Proof ($f$ is inner automorphism) $\implies$ $f$ is in \code{}InnAut\ G\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
proof
  assume Z1: f is inner Automorphism of G;
  reconsider f as inner Automorphism of G by Z1;
  f is Element of Aut G by Z1,Th8;
  then consider a being Element of G such that
  B1: for x being Element of G holds f.x = x |^ a
  by Z1,Def5;
  f is Element of Funcs (the carrier of G, the carrier of G) by FUNCT_2:9;
  then f in InnAut G by B1,AUTGROUP:def 4;
  hence thesis;
end;

\nwendcode{}\nwbegindocs{56}\nwdocspar

\M
It's relatively straightforward to show that if $f$ is an element of
{\Tt{}InnAut\ G\nwendquote}, then $f$ is an {\Tt{}Automorphism\ of\ G\nwendquote}. We just unwind the
definitions.

\nwenddocs{}\nwbegincode{57}\moddef{Lemma: Elements of \code{}InnAut\ G\edoc{} are automorphisms}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
LmInnAut:
  for G being strict Group
  for f being Element of InnAut G
  holds f is Automorphism of G
proof
  let G be strict Group;
  let f be Element of InnAut G;
  f is Element of Aut G by AUTGROUP:12;
  then f in Aut G;
  hence f is Automorphism of G by Th8;
end;

\nwendcode{}\nwbegindocs{58}\nwdocspar

\N{Theorem}
Given any element $a\in G$, and any inner automorphism $f$ of $G$ such
that $\forall x\in G, f(x) = x^{a} = a^{-1}xa$, it follows that the
image of a subgroup $f(H) = H^{a}$ is the conjugate of that subgroup.

\nwenddocs{}\nwbegincode{59}\moddef{Theorem: inner automorphism acting on subgroup is conjugate of argument}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
theorem Th7:
  for a being Element of G
  for f being inner Automorphism of G
  st (for x being Element of G holds f.x = x |^ a)
  holds Image(f|H) = H |^ a
proof
  let a be Element of G,
      f be inner Automorphism of G;
  assume
A0: for x being Element of G holds f.x = x |^ a;
C1: for h being Element of G st h in H holds (f|H).h = h |^ a
  proof
    let h be Element of G;
    assume h in H;
    then Z1: f.h = (f|H).h by Lm3;
    f.h = h |^ a by A0;
    hence (f|H).h = h |^ a by Z1;
  end;

C2: for y being Element of G st y in Image(f|H) holds y in H |^ a
  \LA{}Proof $\forall y\in G, y\in f(H)\implies y\in H^{a}$\RA{}
C3: for y being Element of G st y in H |^ a holds y in Image(f|H)
  \LA{}Proof $\forall y\in G, y \in H^{a}\implies y\in f(H)$\RA{}
  for y being Element of G holds y in (H |^ a) iff y in Image(f|H) by C2,C3;
  then (H |^ a) = Image(f|H) by GROUP_2:def 6;
  hence thesis;
end;
  
\nwendcode{}\nwbegindocs{60}\nwdocspar

\nwenddocs{}\nwbegincode{61}\moddef{Proof $\forall y\in G, y\in f(H)\implies y\in H^{a}$}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
proof
  let y be Element of G;
  assume y in Image(f|H);
  then consider h being Element of H such that
  AA1: (f|H).h = y by GROUP_6:45;
  h is Element of G by GROUP_2:42;
  then reconsider h as Element of G;
  AA2: h in H by STRUCT_0:def 5;
  then (f|H).h = h |^ a by C1;
  then y = h |^ a by AA1;
  then y = h |^ a & h in H by AA2; 
  then y in H |^ a by GROUP_3:58;
  hence thesis;
end;
    
\nwendcode{}\nwbegindocs{62}\nwdocspar


\nwenddocs{}\nwbegincode{63}\moddef{Proof $\forall y\in G, y \in H^{a}\implies y\in f(H)$}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
proof
  let y be Element of G;
  assume y in H |^ a;
  then ex g being Element of G st y = g |^ a & g in H by GROUP_3:58;
  then consider g being Element of G such that
  AB1:    y=g|^a and
  AB2:    g in H;
    
AB3:  (f|H).g = f.g by Lm3,AB2
      .= g |^ a by A0
      .= y by AB1;
  reconsider g as Element of H by AB2,LmSubgroupElt;
  reconsider fH = (f|H) as Homomorphism of H,G;
  fH.g = y by AB3;
  hence y in Image(f|H) by GROUP_6:45;
end;

\nwendcode{}\nwbegindocs{64}\nwdocspar

\N{Theorem} Given a group element $a\in G$, we can always construct an
inner automorphism $f\in\Inn(G)$ defined by
$\forall x\in G,f(x)=x^{a}=a^{-1}xa$ conjugation by $a$.

\nwenddocs{}\nwbegincode{65}\moddef{Theorem: conjugation of given element is an inner automorphism}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
theorem Th10:
  for G being strict Group
  for a being Element of G
  holds ex f being inner Automorphism of G st (for x being Element of G
  holds f.x = x |^ a)
proof
  let G be strict Group;
  let a be Element of G;
  reconsider f = (Conjugate a) as inner Automorphism of G
  by AUTGROUP:def 6, Th9;
  take f;
  let x be Element of G;
  thus f.x = x |^ a by AUTGROUP:def 6;
end;

\nwendcode{}\nwbegindocs{66}\nwdocspar

\nwenddocs{}\nwfilename{nw/characteristic/isomorphism.nw}\nwbegindocs{0}\subsection{Isomorphisms}

\M
We also want to prove results concerning group isomorphisms. This
requires a preliminary notion for a group $G_{2}$ being a
$G_{1}$-isomorphic group.

\nwenddocs{}\nwbegincode{1}\moddef{Group isomorphisms}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
\LA{}Define when a group is \code{}G-isomorphic\edoc{}\RA{}
\LA{}Register \code{}G-isomorphic\edoc{} for groups\RA{}
\LA{}Register \code{}bijective\edoc{} for \code{}Homomorphism\edoc{} of $G_{1}$, $G_{2}$\RA{}
\LA{}Define group \code{}Isomorphism\edoc{}\RA{}

\nwendcode{}\nwbegindocs{2}\nwdocspar


\M It's useful to introduce, not just a group $K$, but a $G$-isomorphic
group $K$.

\nwenddocs{}\nwbegincode{3}\moddef{Define when a group is \code{}G-isomorphic\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
definition :: Def6
  let G1,G2 be Group;
  attr G2 is G1-isomorphic means :Def6:
  G1,G2 are_isomorphic;
end;

\nwendcode{}\nwbegindocs{4}\nwdocspar

\M We also wanter to register this attribute (``being $G$-isomorphic'')
as a perfectly fine adjective for groups. This requires proving that,
for any group $G_{1}$ we have a $G_{1}$-isomorphic group.

\nwenddocs{}\nwbegincode{5}\moddef{Register \code{}G-isomorphic\edoc{} for groups}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
registration
  let G1 be Group;
  cluster G1-isomorphic for Group;
  existence
  proof
    take G1;
    Id_G1 is bijective;
    thus thesis;
  end;
end;

\nwendcode{}\nwbegindocs{6}\nwdocspar

\N{Registering {\Tt{}bijective\nwendquote} for {\Tt{}Homomorphism\nwendquote}}
We had to take a detour, because if you just gave me any two random
groups $G_{1}$ and $G_{2}$, there is zero reason to believe they are
isomorphic. Just consider any two finite groups of different size. And
group isomorphisms are only well-defined between isomorphic groups. Now
that we have a notion of isomorphic-groups, we can define a notion of
{\Tt{}Isomorphism\nwendquote}. We will also need to prove their existence, which we
place in a lemma.

\nwenddocs{}\nwbegincode{7}\moddef{Register \code{}bijective\edoc{} for \code{}Homomorphism\edoc{} of $G_{1}$, $G_{2}$}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
\LA{}Lemma: $G_{2}$ is $G_{1}$-isomorphic implies existence of isomorphism\RA{}

registration
  let G1 be Group,
      G2 be G1-isomorphic Group;
  cluster bijective for Homomorphism of G1,G2;
  existence by Lm5;
end;

\nwendcode{}\nwbegindocs{8}\nwdocspar

\N{Lemma: Isomorphic groups have an isomorphism between them}
Let $G_{1}$ be a group. For any $G_{1}$-isomorphic group $G_{2}$,
there exists at least one isomorphism $G_{1}\to G_{2}$. It's just a
straightforward matter of unwinding the definitions.

\nwenddocs{}\nwbegincode{9}\moddef{Lemma: $G_{2}$ is $G_{1}$-isomorphic implies existence of isomorphism}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
Lm5:
  for G2 being G1-isomorphic Group
  holds (ex h being Homomorphism of G1,G2 st h is bijective)
proof
  let G2 be G1-isomorphic Group;
  G1,G2 are_isomorphic by Def6;
  then consider h being Homomorphism of G1,G2 such that
A1: h is bijective by GROUP_6:def 11;
  thus thesis by A1;
end;

\nwendcode{}\nwbegindocs{10}\nwdocspar

\N{Definition} We can now define a notion of group {\Tt{}Isomorphism\nwendquote} in
Mizar. We can't do it ``willy-nilly'', of course: the notion of an
isomorphism only makes sense when it is from a group $G_{1}$ to a
$G_{1}$-isomorphic group. But given such a condition on $G_{2}$, we can
define an {\Tt{}Isomorphism\nwendquote} as just a bijective group morphism $G_{1}\to G_{2}$.

\nwenddocs{}\nwbegincode{11}\moddef{Define group \code{}Isomorphism\edoc{}}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
definition :: Def7
  let G1 be Group,
      G2 be G1-isomorphic Group;
  mode Isomorphism of G1,G2 is bijective Homomorphism of G1,G2;
end;

\nwendcode{}\nwbegindocs{12}\nwdocspar

\nwenddocs{}\nwfilename{nw/characteristic/results.nw}\nwbegindocs{0}\subsection{Characteristic Subgroups}

\M
We now arrive at the meat of the matter: characteristic subgroups!

\nwenddocs{}\nwbegincode{1}\moddef{Characteristic subgroup results}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
\LA{}Define characteristic attribute\RA{}

\nwendcode{}\nwbegindocs{2}\nwdocspar

\begin{definition}[{Dummit and Foote~\cite[\S4,4]{dummit-foote}}]
A subgroup $H$ of $G$ is called \define{Characteristic} in $G$, usually
denoted $H~\mathrm{char}~G$, if every Automorphism of $G$ maps $H$ to
itself; i.e., $\sigma(H)=H$ for all $\sigma\in\aut(G)$.
\end{definition}

\nwenddocs{}\nwbegincode{3}\moddef{Define characteristic attribute}\endmoddef\nwstartdeflinemarkup\nwenddeflinemarkup
definition :: Def9
  let G;
  let IT be Subgroup of G;
  attr IT is `characteristic means
  :Def9:
  for f being Automorphism of G
  holds Image (f|IT) = IT;
end;

\nwendcode{}\nwbegindocs{4}\nwdocspar
\nwenddocs{}\end{document}

